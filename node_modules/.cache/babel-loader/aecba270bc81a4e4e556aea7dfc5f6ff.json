{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/components/Sidebar/components/SidebarLink/SidebarLink.js\";\nimport React, { useState } from \"react\";\nimport { Collapse, Divider, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport Dot from \"../Dot\";\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type\n}) {\n  var classes = useStyles(); // local\n\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive = link && (location.pathname === link || location.pathname.indexOf(link) !== -1);\n  if (type === \"title\") return /*#__PURE__*/React.createElement(Typography, {\n    className: classnames(classes.linkText, classes.sectionTitle, {\n      [classes.linkTextHidden]: !isSidebarOpened\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, label);\n  if (type === \"divider\") return /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }\n  });\n  if (!children) return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: link && Link,\n    to: link,\n    className: classes.link,\n    classes: {\n      root: classnames(classes.linkRoot, {\n        [classes.linkActive]: isLinkActive && !nested,\n        [classes.linkNested]: nested\n      })\n    },\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, nested ? /*#__PURE__*/React.createElement(Dot, {\n    color: isLinkActive && \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }) : icon), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: link && Link,\n    onClick: toggleCollapse,\n    className: classes.link,\n    to: link,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, icon ? icon : /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), children && /*#__PURE__*/React.createElement(Collapse, {\n    in: isOpen && isSidebarOpened,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: classes.nestedList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, children.map(childrenLink => /*#__PURE__*/React.createElement(SidebarLink, Object.assign({\n    key: childrenLink && childrenLink.link,\n    location: location,\n    isSidebarOpened: isSidebarOpened,\n    classes: classes,\n    nested: true\n  }, childrenLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })))))); // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/components/Sidebar/components/SidebarLink/SidebarLink.js"],"names":["React","useState","Collapse","Divider","List","ListItem","ListItemIcon","ListItemText","Typography","Inbox","InboxIcon","Link","classnames","useStyles","Dot","SidebarLink","link","icon","label","children","location","isSidebarOpened","nested","type","classes","isOpen","setIsOpen","isLinkActive","pathname","indexOf","linkText","sectionTitle","linkTextHidden","divider","root","linkRoot","linkActive","linkNested","linkIcon","linkIconActive","primary","linkTextActive","toggleCollapse","nestedList","map","childrenLink","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}