{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default SimpleBackdrop\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/mio/material-ui/hackaton-front/node_modules/@material-ui/core/esm/Modal/Modal.js"],"names":["_objectWithoutProperties","_extends","React","PropTypes","getThemeProps","useTheme","elementAcceptingRef","HTMLElementType","ownerDocument","Portal","createChainedFunction","useForkRef","useEventCallback","zIndex","ModalManager","ariaHidden","TrapFocus","SimpleBackdrop","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","styles","theme","root","position","modal","right","bottom","top","left","hidden","visibility","Modal","forwardRef","inProps","ref","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableAutoFoc","disableAutoFocus","_props$disableBackdro","disableBackdropClick","_props$disableEnforce","disableEnforceFocus","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableRestore","disableRestoreFocus","_props$disableScrollL","disableScrollLock","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","open","other","_React$useState","useState","exited","setExited","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","inlineStyle","childProps","tabIndex","undefined","onEnter","onExited","createElement","onKeyDown","role","style","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","bool","oneOfType","func"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default SimpleBackdrop\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be inside the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}