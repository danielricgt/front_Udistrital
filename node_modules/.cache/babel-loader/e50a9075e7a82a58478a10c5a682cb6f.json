{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n    flexContainerVertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\n    scrollableX: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\n    scrollableY: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\n    hideScrollbar: {\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `allowScrollButtonsMobile={true}`. */\n    scrollButtonsHideMobile: _defineProperty({}, theme.breakpoints.down('sm'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\nvar Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  var ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$allowScrollBut = props.allowScrollButtonsMobile,\n      allowScrollButtonsMobile = _props$allowScrollBut === void 0 ? false : _props$allowScrollBut,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      selectionFollowsFocus = props.selectionFollowsFocus,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      TabScrollButtonProps = props.TabScrollButtonProps,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      _props$visibleScrollb = props.visibleScrollbar,\n      visibleScrollbar = _props$visibleScrollb === void 0 ? false : _props$visibleScrollb,\n      other = _objectWithoutProperties(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  var theme = useTheme();\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  var _React$useState = React.useState(false),\n      mounted = _React$useState[0],\n      setMounted = _React$useState[1];\n\n  var _React$useState2 = React.useState({}),\n      indicatorStyle = _React$useState2[0],\n      setIndicatorStyle = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    start: false,\n    end: false\n  }),\n      displayScroll = _React$useState3[0],\n      setDisplayScroll = _React$useState3[1];\n\n  var _React$useState4 = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  }),\n      scrollerStyle = _React$useState4[0],\n      setScrollerStyle = _React$useState4[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var tabListRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = tabListRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([\"Material-UI: The value provided to the Tabs component is invalid.\", \"None of the Tabs' children match with `\".concat(value, \"`.\"), valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _newIndicatorStyle;\n\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    var newIndicatorStyle = (_newIndicatorStyle = {}, _defineProperty(_newIndicatorStyle, start, startValue), _defineProperty(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle); // IE 11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var getScrollSize = function getScrollSize() {\n    var containerSize = tabsRef.current[clientSize];\n    var totalSize = 0;\n    var children = Array.from(tabListRef.current.children);\n\n    for (var i = 0; i < children.length; i += 1) {\n      var tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  var handleStartScrollClick = function handleStartScrollClick() {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  var handleEndScrollClick = function handleEndScrollClick() {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarWidth) {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth: scrollbarWidth\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== false) {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useMemo(function () {\n    return debounce(function () {\n      updateScrollButtonState();\n    });\n  }, [updateScrollButtonState]);\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState,\n      updateScrollButtons: updateScrollButtonState\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      selectionFollowsFocus: selectionFollowsFocus,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var target = event.target; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    var role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    var newFocusTarget = null;\n    var previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    var nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  var conditionalElements = getConditionalElements();\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\n    style: _defineProperty({\n      overflow: scrollerStyle.overflow\n    }, vertical ? \"margin\".concat(isRtl ? 'Left' : 'Right') : 'marginBottom', visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth),\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    onKeyDown: handleKeyDown,\n    ref: tabListRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'secondary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'inherit'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar will be visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/node_modules/@material-ui/core/esm/Tabs/Tabs.js"],"names":["_extends","_objectWithoutProperties","_defineProperty","React","isFragment","PropTypes","clsx","refType","debounce","ownerWindow","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","useEventCallback","useTheme","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","display","vertical","flexDirection","flexContainer","flexContainerVertical","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollableX","overflowY","scrollableY","hideScrollbar","scrollbarWidth","scrollButtons","scrollButtonsHideMobile","breakpoints","down","indicator","Tabs","forwardRef","props","ref","ariaLabel","ariaLabelledBy","action","_props$centered","childrenProp","children","classes","className","_props$component","component","Component","_props$allowScrollBut","allowScrollButtonsMobile","_props$indicatorColor","indicatorColor","onChange","_props$orientation","orientation","_props$ScrollButtonCo","ScrollButtonComponent","_props$scrollButtons","selectionFollowsFocus","_props$TabIndicatorPr","TabIndicatorProps","TabScrollButtonProps","_props$textColor","textColor","value","_props$variant","variant","_props$visibleScrollb","visibleScrollbar","other","scrollable","isRtl","direction","scrollStart","start","end","clientSize","size","process","env","NODE_ENV","console","error","_React$useState","useState","mounted","setMounted","_React$useState2","indicatorStyle","setIndicatorStyle","_React$useState3","displayScroll","setDisplayScroll","_React$useState4","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","scrollWidth","top","bottom","left","right","tabMeta","_children","length","tab","get","concat","keys","Array","from","join","updateIndicatorState","_newIndicatorStyle","_getTabsMeta","startValue","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","getConditionalElements","conditionalElements","scrollbarSizeListener","createElement","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","disabled","scrollButtonEnd","scrollSelectedIntoView","_getTabsMeta2","nextScrollStart","_nextScrollStart","updateScrollButtonState","_tabsRef$current","scrollHeight","clientHeight","showStartScroll","showEndScroll","useEffect","handleResize","win","addEventListener","clear","removeEventListener","handleTabsScroll","useMemo","useImperativeHandle","updateIndicator","updateScrollButtons","color","style","childIndex","Children","map","child","isValidElement","childValue","undefined","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","target","role","getAttribute","newFocusTarget","previousItemKey","nextItemKey","key","previousElementSibling","lastChild","nextElementSibling","firstChild","focus","preventDefault","onScroll","onKeyDown","propTypes","bool","string","node","object","elementType","oneOf","func","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n    flexContainerVertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\n    scrollableX: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\n    scrollableY: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\n    hideScrollbar: {\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `allowScrollButtonsMobile={true}`. */\n    scrollButtonsHideMobile: _defineProperty({}, theme.breakpoints.down('sm'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\nvar Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  var ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$allowScrollBut = props.allowScrollButtonsMobile,\n      allowScrollButtonsMobile = _props$allowScrollBut === void 0 ? false : _props$allowScrollBut,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      selectionFollowsFocus = props.selectionFollowsFocus,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      TabScrollButtonProps = props.TabScrollButtonProps,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      _props$visibleScrollb = props.visibleScrollbar,\n      visibleScrollbar = _props$visibleScrollb === void 0 ? false : _props$visibleScrollb,\n      other = _objectWithoutProperties(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  var theme = useTheme();\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  var _React$useState = React.useState(false),\n      mounted = _React$useState[0],\n      setMounted = _React$useState[1];\n\n  var _React$useState2 = React.useState({}),\n      indicatorStyle = _React$useState2[0],\n      setIndicatorStyle = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    start: false,\n    end: false\n  }),\n      displayScroll = _React$useState3[0],\n      setDisplayScroll = _React$useState3[1];\n\n  var _React$useState4 = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  }),\n      scrollerStyle = _React$useState4[0],\n      setScrollerStyle = _React$useState4[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var tabListRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = tabListRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([\"Material-UI: The value provided to the Tabs component is invalid.\", \"None of the Tabs' children match with `\".concat(value, \"`.\"), valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _newIndicatorStyle;\n\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    var newIndicatorStyle = (_newIndicatorStyle = {}, _defineProperty(_newIndicatorStyle, start, startValue), _defineProperty(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle); // IE 11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var getScrollSize = function getScrollSize() {\n    var containerSize = tabsRef.current[clientSize];\n    var totalSize = 0;\n    var children = Array.from(tabListRef.current.children);\n\n    for (var i = 0; i < children.length; i += 1) {\n      var tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  var handleStartScrollClick = function handleStartScrollClick() {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  var handleEndScrollClick = function handleEndScrollClick() {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarWidth) {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth: scrollbarWidth\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== false) {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useMemo(function () {\n    return debounce(function () {\n      updateScrollButtonState();\n    });\n  }, [updateScrollButtonState]);\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState,\n      updateScrollButtons: updateScrollButtonState\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      selectionFollowsFocus: selectionFollowsFocus,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var target = event.target; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    var role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    var newFocusTarget = null;\n    var previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    var nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  var conditionalElements = getConditionalElements();\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\n    style: _defineProperty({\n      overflow: scrollerStyle.overflow\n    }, vertical ? \"margin\".concat(isRtl ? 'Left' : 'Right') : 'marginBottom', visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth),\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    onKeyDown: handleKeyDown,\n    ref: tabListRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'secondary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'inherit'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar will be visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);"]},"metadata":{},"sourceType":"module"}