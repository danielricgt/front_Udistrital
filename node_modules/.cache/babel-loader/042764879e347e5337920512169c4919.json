{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/context/UserContext.js\";\nimport React from \"react\";\nimport firebase from '../components/database/firebase';\nimport { config } from \"../components/config/config\";\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\nvar showName, showIdentification;\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        isAuthenticated: true\n      };\n\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction UserProvider({\n  children\n}) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\")\n  });\n  return /*#__PURE__*/React.createElement(UserStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, userLogin, userRegistry, userRegistrySave, signOut, showName, showIdentification }; // ###########################################################\n\nfunction userLogin(dispatch, email, password, history, setIsLoading, setError, setAnswer) {\n  if (email === '' && password === '') {\n    //Alert.alert('Campos vacíos', 'Ingresa tu correo y contraseña', [{ style: 'destructive' }])\n    setError(true);\n  } else {\n    setError(false);\n    setIsLoading(true);\n    firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n      console.log(res.user);\n      showName = res.user.displayName;\n      showIdentification = res.user.uid;\n      console.log('User logged-in successfully!');\n      setError(null);\n      setIsLoading(false);\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n      history.push('/app/dashboard');\n    }).catch(error => {\n      setError(true);\n      setIsLoading(false);\n      setAnswer(true);\n      console.log(error);\n    });\n  }\n} //Registry\n\n\nfunction userRegistry(history) {\n  getDependences();\n  history.push('/registry');\n} //function userRegistrySave(history, name,lastname,email,password,){\n\n\nasync function userRegistrySave(identification, name, lastname, email, password, password2, history, setIsLoading, setError, setAnswer) {\n  try {\n    setError(false);\n    setIsLoading(true);\n    let response = await fetch(`${config.APIFireBase}/api/user`, {\n      crossDomain: true,\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\"\n      },\n      body: JSON.stringify({\n        id: identification,\n        name: name,\n        lastname: lastname,\n        email: email,\n        password: password\n      })\n    }, {\n      mode: \"cors\"\n    });\n    let json = await response;\n    responseApi(json, setIsLoading, setError, setAnswer, history);\n  } catch (error) {\n    setError(true);\n    setAnswer(true);\n    console.error(error);\n  }\n}\n\n;\n\nfunction responseApi(res, setIsLoading, setError, setAnswer, history) {\n  console.log('esto es la respuesta', res.description, res.json());\n\n  if (typeof res.error !== 'undefined') {\n    setIsLoading(false);\n    setError(true);\n    console.log('Upps!', res.error);\n  } else {\n    if (typeof res.status === 'undefined' || res.status !== 200) {\n      setIsLoading(false);\n      setError(true);\n      setAnswer(true);\n      console.log(JSON.stringify(res));\n      console.log('Upps!', 'Algo pasó, intenta de nuevo');\n    } else {\n      if (res.status == 200) {\n        setError(null);\n        setIsLoading(false);\n        history.push('/app/dashboard');\n        console.log('respuesta!!!!!!!!!', res);\n      } else {\n        setError(true);\n        setIsLoading(false);\n        setAnswer(true);\n        console.log('Upps!', 'Algo pasó intenta de nuevo', res);\n      }\n    }\n  }\n}\n\nasync function getDependences() {\n  try {\n    let response = await fetch(`${config.APIFireBase}/api/dependence`, {\n      crossDomain: true,\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\"\n      }\n    }, {\n      mode: \"cors\"\n    });\n    let json = await response;\n    console.log(\"a continuaci´n respuesta -->\", json.body); //responseApi(json, setIsLoading,setError, setAnswer,history);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/context/UserContext.js"],"names":["React","firebase","config","UserStateContext","createContext","UserDispatchContext","showName","showIdentification","userReducer","state","action","type","isAuthenticated","Error","UserProvider","children","dispatch","useReducer","localStorage","getItem","useUserState","context","useContext","undefined","useUserDispatch","userLogin","userRegistry","userRegistrySave","signOut","email","password","history","setIsLoading","setError","setAnswer","auth","signInWithEmailAndPassword","then","res","console","log","user","displayName","uid","push","catch","error","getDependences","identification","name","lastname","password2","response","fetch","APIFireBase","crossDomain","method","headers","Accept","body","JSON","stringify","id","mode","json","responseApi","description","status","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from '../components/database/firebase';\nimport { config } from \"../components/config/config\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\nvar showName, showIdentification;\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state, isAuthenticated: true };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, isAuthenticated: false };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, userLogin, userRegistry, userRegistrySave,signOut, showName, showIdentification};\n\n// ###########################################################\n\nfunction userLogin (dispatch, email, password, history, setIsLoading, setError, setAnswer) {\n  if (email === '' && password === '') {\n    //Alert.alert('Campos vacíos', 'Ingresa tu correo y contraseña', [{ style: 'destructive' }])\n    setError(true);\n  } else {\n    setError(false);\n    setIsLoading(true);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        console.log(res.user)\n        showName= res.user.displayName\n        showIdentification= res.user.uid\n        console.log('User logged-in successfully!')\n        setError(null)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS' })\n        history.push('/app/dashboard')\n      })\n      .catch((error => {\n        setError(true);\n        setIsLoading(false);\n        setAnswer(true);\n          console.log(error)\n      }));\n  }\n}\n\n//Registry\n\nfunction userRegistry(history){\n  getDependences();\n  history.push('/registry')\n}\n\n//function userRegistrySave(history, name,lastname,email,password,){\nasync function userRegistrySave ( identification,name, lastname, email,password, password2, history,setIsLoading,setError, setAnswer ){\n  try {\n    setError(false);\n    setIsLoading(true);\n    let response = await fetch(\n      `${config.APIFireBase}/api/user`, {\n        crossDomain:true,\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        },\n\n        body: JSON.stringify({\n          id: identification,\n          name: name,\n          lastname: lastname,\n          email: email,\n          password: password\n        })\n      },\n      { mode: \"cors\" }\n    );\n    let json = await response;\n    responseApi(json, setIsLoading,setError, setAnswer,history);\n  } catch (error) {\n    setError(true);\n    setAnswer(true);\n    console.error(error);\n  }\n};\n\nfunction responseApi(res, setIsLoading,setError, setAnswer, history) {\n  console.log('esto es la respuesta',res.description, res.json())\n  if (typeof res.error!== 'undefined'){\n    setIsLoading(false);\n    setError(true);\n    console.log('Upps!', res.error)            \n  }else{\n    if(typeof res.status === 'undefined' || res.status!==200){\n      setIsLoading(false);\n      setError(true);\n      setAnswer(true);\n      console.log(JSON.stringify(res))\n      console.log('Upps!', 'Algo pasó, intenta de nuevo')      \n    }  else{\n      if(res.status==200){\n        setError(null);\n        setIsLoading(false);\n        history.push('/app/dashboard')\n        console.log('respuesta!!!!!!!!!', res)                   \n      } else{\n        setError(true);\n        setIsLoading(false)\n        setAnswer(true);\n        console.log('Upps!', 'Algo pasó intenta de nuevo', res)          \n      }\n    }    \n  }\n\n}\n\nasync function getDependences(){\n  try {\n    let response = await fetch(\n      `${config.APIFireBase}/api/dependence`, {\n        crossDomain:true,\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        }\n      },\n      { mode: \"cors\" }\n    );\n    let json = await response;\n    console.log(\"a continuaci´n respuesta -->\", json.body)\n    //responseApi(json, setIsLoading,setError, setAnswer,history);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\n"]},"metadata":{},"sourceType":"module"}