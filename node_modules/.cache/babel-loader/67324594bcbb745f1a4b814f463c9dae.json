{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Registry/registry.js\";\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, TextField, Paper, Select, FormControl, InputLabel, MenuItem, Input } from \"@material-ui/core\";\nimport { FixedSizeList } from 'react-window';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport useStyles from \"./style\";\nimport { withRouter } from \"react-router-dom\"; //Context\n\nimport { useUserDispatch, userRegistrySave } from \"../../context/UserContext\";\nimport logo from \"../../assets/images/logo.png\";\nimport { dependence } from \"../../context/UserContext\";\n\nfunction Registry(props) {\n  var classes = useStyles();\n  var [isLoading, setIsLoading] = useState(false);\n  var [identificationValue, setIdentificationValue] = useState(\"\");\n  var [nameValue, setNameValue] = useState(\"\");\n  var [lastnameValue, setLastnameValue] = useState(\"\");\n  var [emailValue, setEmailValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [passwordBValue, setPasswordBValue] = useState(\"\");\n  var [answer, setAnswer] = useState(null);\n  var [error, setError] = useState(null);\n  const [open, setOpen] = React.useState(true); // global\n  // var userDispatch = useUserDispatch();\n  //render() {\n\n  const [dependencia, setDependencia] = React.useState('');\n\n  const handleChange = event => {\n    setDependencia(event.target.value);\n  };\n\n  function createAlert(props) {\n    const {\n      index,\n      style\n    } = props;\n    return /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }\n    }, \"Success\"), \"This is a success alert \\u2014 \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"check it out!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"elevation\",\n    elevation: 5,\n    className: classes.loginBackground,\n    square: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Registro\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logotypeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.logotypeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"identification\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: identificationValue,\n    onChange: e => setIdentificationValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"N\\xFAmero de identificaci\\xF3n\",\n    label: \"N\\xFAmero de identificaci\\xF3n\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: nameValue,\n    onChange: e => setNameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Nombre\",\n    label: \"Nombre\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"lastname\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: lastnameValue,\n    onChange: e => setLastnameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Apellidos\",\n    label: \"Apellidos\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: emailValue,\n    onChange: e => setEmailValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Correo\",\n    label: \"Correo\",\n    type: \"email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-name-label\",\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"Dependencia\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-name-label\",\n    id: \"demo-mutiple-name\",\n    value: dependencia,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, dependence.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, name.dependence_name))))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Contrase\\xF1a\",\n    label: \"Contrase\\xF1a\",\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"repeatpassword\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordBValue,\n    onChange: e => setPasswordBValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Repetir Contrase\\xF1a\",\n    label: \"Repetir Contrase\\xF1a\",\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: identificationValue === '' || nameValue === '' || lastnameValue === '' || emailValue === '' || passwordValue === '' || passwordBValue === '',\n    onClick: () => {\n      userRegistrySave(identificationValue, nameValue, lastnameValue, emailValue, passwordValue, passwordBValue, props.history, setIsLoading, setError, setAnswer);\n      alert('');\n    },\n    variant: \"contained\",\n    className: classes.loginButtom,\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Registrarse\"))))), answer ? /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 27\n    }\n  }, \"Alg\\xF3 pas\\xF3 verifica los datos\")) : /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  })); //}\n}\n\nexport default withRouter(Registry);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Registry/registry.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","TextField","Paper","Select","FormControl","InputLabel","MenuItem","Input","FixedSizeList","Alert","CloseIcon","IconButton","Collapse","useStyles","withRouter","useUserDispatch","userRegistrySave","logo","dependence","Registry","props","classes","isLoading","setIsLoading","identificationValue","setIdentificationValue","nameValue","setNameValue","lastnameValue","setLastnameValue","emailValue","setEmailValue","passwordValue","setPasswordValue","passwordBValue","setPasswordBValue","answer","setAnswer","error","setError","open","setOpen","dependencia","setDependencia","handleChange","event","target","value","createAlert","index","style","container","loginBackground","formContainer","form","title","logotypeContainer","logotypeImage","underline","textFieldUnderline","input","textField","e","list","formControl","label","map","name","dependence_name","formButtons","loginLoader","history","alert","loginButtom","errorMessage"],"mappings":"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","sourcesContent":["import React , { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  TextField,\n  Paper,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Input\n} from \"@material-ui/core\";\nimport { FixedSizeList } from 'react-window';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport useStyles from \"./style\";\nimport { withRouter } from \"react-router-dom\";\n//Context\nimport { useUserDispatch, userRegistrySave } from \"../../context/UserContext\";\nimport logo from \"../../assets/images/logo.png\";\nimport { dependence } from \"../../context/UserContext\";\n\n\n\nfunction Registry(props) {\nvar classes= useStyles();\n\nvar [isLoading, setIsLoading] = useState(false);\nvar [identificationValue, setIdentificationValue] = useState(\"\");\nvar [nameValue, setNameValue] = useState(\"\");\nvar [lastnameValue, setLastnameValue] = useState(\"\");\nvar [emailValue, setEmailValue] = useState(\"\");\nvar [passwordValue, setPasswordValue] = useState(\"\");\nvar [passwordBValue, setPasswordBValue] = useState(\"\");\nvar [answer, setAnswer] = useState(null);\nvar [error, setError] = useState(null);\nconst [open, setOpen] = React.useState(true);\n  // global\n  // var userDispatch = useUserDispatch();\n  //render() {\n    const [dependencia, setDependencia] = React.useState('');\n\n    const handleChange = (event) => {\n      setDependencia(event.target.value);\n    };\n\n    function createAlert(props) {\n      const { index, style } = props;\n    \n      return (\n<Alert severity=\"success\">\n  <AlertTitle>Success</AlertTitle>\n  This is a success alert — <strong>check it out!</strong>\n</Alert>\n      );\n    }\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper\n        variant=\"elevation\"\n        elevation={5}\n        className={classes.loginBackground}\n        square= {false}\n      >\n        <div className={classes.formContainer}>\n          <div className={classes.form}>\n            <Typography variant=\"h1\" className={classes.title}>\n              Registro\n            </Typography>\n            <div className={classes.logotypeContainer}>\n              <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n            </div>\n            <TextField\n              id=\"identification\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={identificationValue}\n              onChange={e => setIdentificationValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Número de identificación\"\n              label=\"Número de identificación\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"name\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={nameValue}\n              onChange={e => setNameValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Nombre\"\n              label=\"Nombre\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"lastname\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={lastnameValue}\n              onChange={e => setLastnameValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Apellidos\"\n              label=\"Apellidos\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"email\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={emailValue}\n              onChange={e => setEmailValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Correo\"\n              label=\"Correo\"\n              type=\"email\"\n              variant=\"outlined\"\n              fullWidth\n            />\n             <div className={classes.list}>\n          <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-name-label\" className={classes.label}>Dependencia</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-name-label\"\n          id=\"demo-mutiple-name\"\n          value={dependencia}\n          onChange={handleChange}\n          input={<Input />}\n        >\n          {dependence.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name.dependence_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n          </div> \n\n            <TextField\n              id=\"password\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={passwordValue}\n              onChange={e => setPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Contraseña\"\n              label=\"Contraseña\"\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"repeatpassword\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={passwordBValue}\n              onChange={e => setPasswordBValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Repetir Contraseña\"\n              label=\"Repetir Contraseña\"\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <div className={classes.formButtons}>\n            {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                <Button\n                  disabled={\n                    identificationValue==='' || nameValue === '' || lastnameValue==='' || emailValue==='' || passwordValue === '' || passwordBValue===''\n                  }\n                  onClick={() =>{\n                    userRegistrySave(\n                      identificationValue,\n                      nameValue,\n                      lastnameValue,\n                      emailValue,\n                      passwordValue,\n                      passwordBValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                      setAnswer \n                    )\n                    alert('')\n                  }\n\n                  }\n                  variant=\"contained\"\n                  className={classes.loginButtom}\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  Registrarse\n                </Button>\n                )}\n            </div>\n          </div>\n        </div>\n\n      </Paper>\n      {\n                  answer?(\n                    <Collapse in={open}>\n                          <Alert\n                          severity=\"error\"\n                            action={\n                              <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => {\n                                  setOpen(false);\n                                }}\n                              >\n                                <CloseIcon fontSize=\"inherit\" />\n                              </IconButton>\n                            }\n                          >\n                            Algó pasó verifica los datos\n                          </Alert>\n                          </Collapse>\n                  ):\n                  (\n                    <Typography color=\"secondary\" className={classes.errorMessage}>\n                    \n                  </Typography>\n                  )\n                }\n    </Grid>\n  );\n//}\n}\n\nexport default withRouter(Registry);"]},"metadata":{},"sourceType":"module"}