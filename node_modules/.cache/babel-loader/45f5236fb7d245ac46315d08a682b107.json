{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      padding: '6px 12px 8px',\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if selected. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\nvar BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      icon = props.icon,\n      label = props.label,\n      onChange = props.onChange,\n      onTouchStart = props.onTouchStart,\n      onTouchEnd = props.onTouchEnd,\n      onClick = props.onClick,\n      selected = props.selected,\n      showLabel = props.showLabel,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onTouchStart\", \"onTouchEnd\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n\n  var touchStartPos = React.useRef();\n  var touchTimer = React.useRef();\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(touchTimer.current);\n    };\n  }, [touchTimer]);\n\n  var handleTouchStart = function handleTouchStart(event) {\n    if (onTouchStart) {\n      onTouchStart(event);\n    }\n\n    var _event$touches$ = event.touches[0],\n        clientX = _event$touches$.clientX,\n        clientY = _event$touches$.clientY;\n    touchStartPos.current = {\n      clientX: clientX,\n      clientY: clientY\n    };\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (onTouchEnd) onTouchEnd(event);\n    var target = event.target;\n    var _event$changedTouches = event.changedTouches[0],\n        clientX = _event$changedTouches.clientX,\n        clientY = _event$changedTouches.clientY;\n\n    if (Math.abs(clientX - touchStartPos.current.clientX) < 10 && Math.abs(clientY - touchStartPos.current.clientY) < 10) {\n      touchTimer.current = setTimeout(function () {\n        // Simulate the native tap behavior on mobile.\n        // On the web, a tap won't trigger a click if a container is scrolling.\n        //\n        // Note that the synthetic behavior won't trigger a native <a> nor\n        // it will trigger a click at all on iOS.\n        target.dispatchEvent(new Event('click', {\n          bubbles: true\n        }));\n      }, 10);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    clearTimeout(touchTimer.current);\n\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),\n    focusRipple: true,\n    onClick: handleChange,\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon element.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/mio/material-ui/hackaton-front/node_modules/@material-ui/core/esm/BottomNavigationAction/BottomNavigationAction.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","ButtonBase","unsupportedProp","styles","theme","root","transition","transitions","create","duration","short","padding","minWidth","maxWidth","color","palette","text","secondary","flex","paddingTop","primary","main","selected","iconOnly","wrapper","display","alignItems","justifyContent","width","flexDirection","label","fontFamily","typography","fontSize","pxToRem","opacity","transitionDelay","BottomNavigationAction","forwardRef","props","ref","classes","className","icon","onChange","onTouchStart","onTouchEnd","onClick","showLabel","value","other","touchStartPos","useRef","touchTimer","useEffect","clearTimeout","current","handleTouchStart","event","_event$touches$","touches","clientX","clientY","handleTouchEnd","target","_event$changedTouches","changedTouches","Math","abs","setTimeout","dispatchEvent","Event","bubbles","handleChange","createElement","focusRipple","process","env","NODE_ENV","propTypes","children","object","string","node","func","bool","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      padding: '6px 12px 8px',\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if selected. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\nvar BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      icon = props.icon,\n      label = props.label,\n      onChange = props.onChange,\n      onTouchStart = props.onTouchStart,\n      onTouchEnd = props.onTouchEnd,\n      onClick = props.onClick,\n      selected = props.selected,\n      showLabel = props.showLabel,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onTouchStart\", \"onTouchEnd\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n\n  var touchStartPos = React.useRef();\n  var touchTimer = React.useRef();\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(touchTimer.current);\n    };\n  }, [touchTimer]);\n\n  var handleTouchStart = function handleTouchStart(event) {\n    if (onTouchStart) {\n      onTouchStart(event);\n    }\n\n    var _event$touches$ = event.touches[0],\n        clientX = _event$touches$.clientX,\n        clientY = _event$touches$.clientY;\n    touchStartPos.current = {\n      clientX: clientX,\n      clientY: clientY\n    };\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (onTouchEnd) onTouchEnd(event);\n    var target = event.target;\n    var _event$changedTouches = event.changedTouches[0],\n        clientX = _event$changedTouches.clientX,\n        clientY = _event$changedTouches.clientY;\n\n    if (Math.abs(clientX - touchStartPos.current.clientX) < 10 && Math.abs(clientY - touchStartPos.current.clientY) < 10) {\n      touchTimer.current = setTimeout(function () {\n        // Simulate the native tap behavior on mobile.\n        // On the web, a tap won't trigger a click if a container is scrolling.\n        //\n        // Note that the synthetic behavior won't trigger a native <a> nor\n        // it will trigger a click at all on iOS.\n        target.dispatchEvent(new Event('click', {\n          bubbles: true\n        }));\n      }, 10);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    clearTimeout(touchTimer.current);\n\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),\n    focusRipple: true,\n    onClick: handleChange,\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon element.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);"]},"metadata":{},"sourceType":"module"}