{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n      handleBlurVisible = _useIsFocusVisible.onBlur,\n      handleFocusVisible = _useIsFocusVisible.onFocus,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['error', 'inherit', 'initial', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/node_modules/@material-ui/core/esm/Link/Link.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","elementTypeAcceptingRef","capitalize","withStyles","useIsFocusVisible","useForkRef","Typography","styles","root","underlineNone","textDecoration","underlineHover","underlineAlways","button","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","focusVisible","Link","forwardRef","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","_React$useState","useState","setFocusVisible","handlerRef","handleBlur","event","current","handleFocus","createElement","concat","process","env","NODE_ENV","propTypes","children","node","object","string","oneOf","func","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n      handleBlurVisible = _useIsFocusVisible.onBlur,\n      handleFocusVisible = _useIsFocusVisible.onFocus,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['error', 'inherit', 'initial', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"]},"metadata":{},"sourceType":"module"}