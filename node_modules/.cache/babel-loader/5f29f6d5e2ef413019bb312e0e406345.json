{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Dashboard/dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Paper, TextField, Button, Avatar, CircularProgress } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse'; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport { Typography } from \"../../components/Wrappers\";\nimport { showIdentification, showName, showDependence, saveGood } from \"../../context/UserContext\";\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var [emailValue, setEmailValue] = useState(\"\");\n  var [isLoading, setIsLoading] = useState(false);\n  var [descriptionValue, setDescriptionValue] = useState(\"\");\n  var [plateValue, setPlateValue] = useState(\"\");\n  var [placeValue, setPlaceValue] = useState(\"\");\n  var [physicalspaceValue, setPhysicalspaceValue] = useState(\"\");\n  var [brandValue, setBrandValue] = useState(\"\");\n  var [stateValue, setStateValue] = useState(\"\");\n  var [reasonValue, setReasonValue] = useState(\"\");\n  var [answer, setAnswer] = useState(null);\n  var [error, setError] = useState(null);\n  const [open, setOpen] = React.useState(true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"elevation\",\n    elevation: 5,\n    className: classes.principalContainer,\n    square: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Nuevo inventario\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"dependence\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    disabled: \"true\",\n    margin: \"normal\",\n    placeholder: showDependence,\n    label: showDependence,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    disabled: \"true\",\n    margin: \"normal\",\n    placeholder: showName,\n    label: showName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"identification\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    disabled: \"true\",\n    margin: \"normal\",\n    placeholder: \"N\\xFAmero de identificaci\\xF3n\",\n    label: showIdentification,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Bienes a registrar\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"descripcion\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: descriptionValue,\n    onChange: e => setDescriptionValue(e.target.value),\n    label: \"Descripci\\xF3n\",\n    placeholder: \"Descripci\\xF3n\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"placa\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: plateValue,\n    onChange: e => setPlateValue(e.target.value),\n    label: \"Placa\",\n    placeholder: \"Placa\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Sede\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: placeValue,\n    onChange: e => setPlaceValue(e.target.value),\n    label: \"Sede\",\n    placeholder: \"Sede\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Espacio\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: physicalspaceValue,\n    onChange: e => setPhysicalspaceValue(e.target.value),\n    label: \"Espacio F\\xEDsico\",\n    placeholder: \"Espacio F\\xEDsico\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Marca\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: brandValue,\n    onChange: e => setBrandValue(e.target.value),\n    label: \"Marca y Serie\",\n    placeholder: \"Marca y Serie\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Estado\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: stateValue,\n    onChange: e => setStateValue(e.target.value),\n    label: \"Estado\",\n    placeholder: \"Estado\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"Motivo\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: reasonValue,\n    onChange: e => setReasonValue(e.target.value),\n    label: \"Motivo Ingreso\",\n    placeholder: \"Motivo Ingreso\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: descriptionValue === '' || plateValue === '' || placeValue === '' || physicalspaceValue === '' || brandValue === '' || stateValue === '' || reasonValue === '',\n    onClick: () => {\n      saveGood(descriptionValue, plateValue, placeValue, physicalspaceValue, brandValue, stateValue, reasonValue, props.history, setIsLoading, setError, setAnswer);\n      alert('Datos enviados');\n    },\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.addButton,\n    startIcon: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://www.freeiconspng.com/thumbs/check-tick-icon/tick-icon-30.png\",\n      className: classes.iconC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }))), answer ? /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 27\n    }\n  }, \"Alg\\xF3 pas\\xF3 verifica los datos\")) : /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Dashboard/dashboard.js"],"names":["React","useState","Paper","TextField","Button","Avatar","CircularProgress","useTheme","Alert","CloseIcon","IconButton","Collapse","useStyles","Typography","showIdentification","showName","showDependence","saveGood","Dashboard","props","classes","emailValue","setEmailValue","isLoading","setIsLoading","descriptionValue","setDescriptionValue","plateValue","setPlateValue","placeValue","setPlaceValue","physicalspaceValue","setPhysicalspaceValue","brandValue","setBrandValue","stateValue","setStateValue","reasonValue","setReasonValue","answer","setAnswer","error","setError","open","setOpen","principalContainer","formContainer","form","title","underline","textFieldUnderline","input","textField","e","target","value","loginLoader","history","alert","addButton","iconC","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Paper,\n  TextField,\n  Button,\n  Avatar,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../../components/Wrappers\";\nimport { showIdentification, showName, showDependence, saveGood } from \"../../context/UserContext\";\n\n\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var [emailValue, setEmailValue] = useState(\"\");\n  var [isLoading, setIsLoading] = useState(false);\n  var [descriptionValue,setDescriptionValue] = useState(\"\");\n  var [plateValue,setPlateValue] = useState(\"\");\n  var [placeValue,setPlaceValue] = useState(\"\");\n  var [physicalspaceValue,setPhysicalspaceValue] = useState(\"\");\n  var [brandValue,setBrandValue] = useState(\"\");\n  var [stateValue,setStateValue] = useState(\"\");\n  var [reasonValue,setReasonValue] = useState(\"\");\n  var [answer, setAnswer] = useState(null);\n  var [error, setError] = useState(null);\n  const [open, setOpen] = React.useState(true);\n\n\n  return (\n    <>\n      <Paper\n        variant=\"elevation\"\n        elevation={5}\n        className={classes.principalContainer}\n        square= {false}\n      >\n                <div className={classes.formContainer}>\n                <div className={classes.form}>\n                \n            <Typography variant=\"h1\" className={classes.title}>\n              Nuevo inventario\n            </Typography>\n            <TextField\n              id=\"dependence\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              disabled = \"true\"\n              margin=\"normal\"\n              placeholder={showDependence}\n              label={showDependence}\n              variant=\"outlined\"              \n            />\n            <TextField\n              id=\"name\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              disabled = \"true\"\n              margin=\"normal\"\n              placeholder={showName}\n              label={showName}\n              variant=\"outlined\"              \n            />\n            <TextField\n              id=\"identification\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              disabled = \"true\"\n              margin=\"normal\"\n              placeholder=\"Número de identificación\"\n              label={showIdentification}\n              variant=\"outlined\"              \n            />\n            <Typography variant=\"h2\" className={classes.title}>\n              Bienes a registrar\n            </Typography>\n            <TextField\n              id = \"descripcion\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={descriptionValue}\n              onChange={e => setDescriptionValue(e.target.value)}\n              label= \"Descripción\"\n              placeholder = \"Descripción\"\n              variant= \"outlined\"\n            />\n            <TextField\n              id = \"placa\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={plateValue}\n              onChange={e => setPlateValue(e.target.value)}\n              label= \"Placa\"\n              placeholder = \"Placa\"\n              variant= \"outlined\"\n            />\n              <TextField\n              id = \"Sede\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={placeValue}\n              onChange={e => setPlaceValue(e.target.value)}\n              label= \"Sede\"\n              placeholder = \"Sede\"\n              variant= \"outlined\"\n            />\n            <TextField\n              id = \"Espacio\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={physicalspaceValue}\n              onChange={e => setPhysicalspaceValue(e.target.value)}\n              label= \"Espacio Físico\"\n              placeholder = \"Espacio Físico\"\n              variant= \"outlined\"\n            />\n                        <TextField\n              id = \"Marca\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={brandValue}\n              onChange={e => setBrandValue(e.target.value)}\n              label= \"Marca y Serie\"\n              placeholder = \"Marca y Serie\"\n              variant= \"outlined\"\n            />\n                        <TextField\n              id = \"Estado\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={stateValue}\n              onChange={e => setStateValue(e.target.value)}\n              label= \"Estado\"\n              placeholder = \"Estado\"\n              variant= \"outlined\"\n            /> \n            <TextField\n            id = \"Motivo\"\n            InputProps={{\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField,\n              },\n            }}\n            value={reasonValue}\n            onChange={e => setReasonValue(e.target.value)}\n            label= \"Motivo Ingreso\"\n            placeholder = \"Motivo Ingreso\"\n            variant= \"outlined\"\n          />\n                      {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n          <Button\n          disabled={\n            descriptionValue==='' || plateValue === '' || placeValue==='' || physicalspaceValue==='' || brandValue === '' || stateValue==='' || reasonValue===''\n          }\n          onClick={() =>{\n            saveGood(\n              descriptionValue,\n              plateValue,\n              placeValue,\n              physicalspaceValue,\n              brandValue,\n              stateValue,\n              reasonValue,              \n              props.history,\n              setIsLoading,\n              setError,\n              setAnswer \n            )\n            alert('Datos enviados')\n          }\n\n          }       \n          variant = \"contained\"\n          color = \"secondary\"\n          className ={classes.addButton}  \n          startIcon = {<Avatar src='https://www.freeiconspng.com/thumbs/check-tick-icon/tick-icon-30.png' className={classes.iconC}  />}>\n  \n          </Button>\n                          )}\n                  </div>\n                </div>\n                {\n                  answer?(\n                    <Collapse in={open}>\n                          <Alert\n                          severity=\"error\"\n                            action={\n                              <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => {\n                                  setOpen(false);\n                                }}\n                              >\n                                <CloseIcon fontSize=\"inherit\" />\n                              </IconButton>\n                            }\n                          >\n                            Algó pasó verifica los datos\n                          </Alert>\n                          </Collapse>\n                  ):\n                  (\n                    <Typography color=\"secondary\" className={classes.errorMessage}>\n                    \n                  </Typography>\n                  )\n                }      \n        </Paper>\n    </>\n  );\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}