{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'left'\n  } : _props$anchorOrigin;\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEnter = _props$TransitionProp.onEnter,\n      onExited = _props$TransitionProp.onExited,\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, [\"onEnter\", \"onExited\"]),\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited(node) {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(function () {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up',\n    onEnter: handleEnter,\n    onExited: handleExited\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/node_modules/@material-ui/core/esm/Snackbar/Snackbar.js"],"names":["_objectWithoutProperties","_defineProperty","_extends","React","PropTypes","clsx","withStyles","duration","ClickAwayListener","useEventCallback","capitalize","Grow","SnackbarContent","styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","forwardRef","props","ref","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","_props$TransitionProp","TransitionProps","onEnter","onExited","other","timerAutoHide","useRef","_React$useState","useState","exited","setExited","handleClose","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","createElement","onClickAway","concat","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","elementType","oneOfType","flip","name"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,oDAArC;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,MAAIC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE;AADI,GAAX;AAGA,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AADI,GAAd;AAGA,MAAIC,KAAK,GAAG;AACVC,IAAAA,cAAc,EAAE;AADN,GAAZ;AAGA,MAAIC,IAAI,GAAG;AACTD,IAAAA,cAAc,EAAE;AADP,GAAX;AAGA,MAAIE,IAAI,GAAG;AACTN,IAAAA,GAAG,EAAE;AADI,GAAX;AAGA,MAAIO,OAAO,GAAG;AACZL,IAAAA,MAAM,EAAE;AADI,GAAd;AAGA,MAAIM,MAAM,GAAG;AACXL,IAAAA,KAAK,EAAE;AADI,GAAb;AAGA,MAAIM,KAAK,GAAG;AACVJ,IAAAA,IAAI,EAAE;AADI,GAAZ;AAGA,MAAIK,MAAM,GAAG;AACXL,IAAAA,IAAI,EAAE,KADK;AAEXF,IAAAA,KAAK,EAAE,MAFI;AAGXQ,IAAAA,SAAS,EAAE;AAHA,GAAb;AAKA,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEf,KAAK,CAACe,MAAN,CAAaC,QADjB;AAEJC,MAAAA,QAAQ,EAAE,OAFN;AAGJC,MAAAA,OAAO,EAAE,MAHL;AAIJX,MAAAA,IAAI,EAAE,CAJF;AAKJF,MAAAA,KAAK,EAAE,CALH;AAMJC,MAAAA,cAAc,EAAE,QANZ;AAOJa,MAAAA,UAAU,EAAE;AAPR,KAFD;;AAYL;AACAC,IAAAA,qBAAqB,EAAEhC,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAWd,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAWI,MAAX,CAAzC,CAA1B,CAb1B;;AAeL;AACAW,IAAAA,wBAAwB,EAAEnC,QAAQ,CAAC,EAAD,EAAKe,OAAL,EAAchB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC,EAAD,EAAKqB,OAAL,EAAcG,MAAd,CAAzC,CAA7B,CAhB7B;;AAkBL;AACAY,IAAAA,oBAAoB,EAAEpC,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAWI,KAAX,EAAkBlB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AACvGmB,MAAAA,IAAI,EAAE;AADiG,KAAD,EAErGC,IAFqG,EAE/FE,MAF+F,CAAzC,CAAjC,CAnBzB;;AAuBL;AACAe,IAAAA,uBAAuB,EAAErC,QAAQ,CAAC,EAAD,EAAKe,OAAL,EAAcE,KAAd,EAAqBlB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AAC7GmB,MAAAA,IAAI,EAAE;AADuG,KAAD,EAE3GE,OAF2G,EAElGC,MAFkG,CAAzC,CAApC,CAxB5B;;AA4BL;AACAgB,IAAAA,mBAAmB,EAAEtC,QAAQ,CAAC,EAAD,EAAKa,IAAL,EAAWM,IAAX,EAAiBpB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AACrGiB,MAAAA,KAAK,EAAE;AAD8F,KAAD,EAEnGG,IAFmG,EAE7FG,KAF6F,CAAzC,CAAhC,CA7BxB;;AAiCL;AACAgB,IAAAA,sBAAsB,EAAEvC,QAAQ,CAAC,EAAD,EAAKe,OAAL,EAAcI,IAAd,EAAoBpB,eAAe,CAAC,EAAD,EAAKa,KAAK,CAACqB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAL,EAAiClC,QAAQ,CAAC;AAC3GiB,MAAAA,KAAK,EAAE;AADoG,KAAD,EAEzGI,OAFyG,EAEhGE,KAFgG,CAAzC,CAAnC;AAlC3B,GAAP;AAsCD,CApEM;AAqEP,IAAIiB,QAAQ,GAAG,aAAavC,KAAK,CAACwC,UAAN,CAAiB,SAASD,QAAT,CAAkBE,KAAlB,EAAyBC,GAAzB,EAA8B;AACzE,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AAAA,MACIC,mBAAmB,GAAGH,KAAK,CAACI,YADhC;AAEAD,EAAAA,mBAAmB,GAAGA,mBAAmB,KAAK,KAAK,CAA7B,GAAiC;AACrDE,IAAAA,QAAQ,EAAE,QAD2C;AAErDC,IAAAA,UAAU,EAAE;AAFyC,GAAjC,GAGlBH,mBAHJ;AAIA,MAAIE,QAAQ,GAAGF,mBAAmB,CAACE,QAAnC;AAAA,MACIC,UAAU,GAAGH,mBAAmB,CAACG,UADrC;AAAA,MAEIC,qBAAqB,GAAGP,KAAK,CAACQ,gBAFlC;AAAA,MAGIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAHjE;AAAA,MAIIE,QAAQ,GAAGT,KAAK,CAACS,QAJrB;AAAA,MAKIC,OAAO,GAAGV,KAAK,CAACU,OALpB;AAAA,MAMIC,SAAS,GAAGX,KAAK,CAACW,SANtB;AAAA,MAOIC,sBAAsB,GAAGZ,KAAK,CAACY,sBAPnC;AAAA,MAQIC,YAAY,GAAGb,KAAK,CAACa,YARzB;AAAA,MASIC,qBAAqB,GAAGd,KAAK,CAACe,yBATlC;AAAA,MAUIA,yBAAyB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAV3E;AAAA,MAWIE,OAAO,GAAGhB,KAAK,CAACgB,OAXpB;AAAA,MAYIC,OAAO,GAAGjB,KAAK,CAACiB,OAZpB;AAAA,MAaIC,YAAY,GAAGlB,KAAK,CAACkB,YAbzB;AAAA,MAcIC,YAAY,GAAGnB,KAAK,CAACmB,YAdzB;AAAA,MAeIC,IAAI,GAAGpB,KAAK,CAACoB,IAfjB;AAAA,MAgBIC,kBAAkB,GAAGrB,KAAK,CAACqB,kBAhB/B;AAAA,MAiBIC,qBAAqB,GAAGtB,KAAK,CAACuB,mBAjBlC;AAAA,MAkBIA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmCvD,IAAnC,GAA0CuD,qBAlBpE;AAAA,MAmBIE,qBAAqB,GAAGxB,KAAK,CAACyB,kBAnBlC;AAAA,MAoBIA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC;AAC1DE,IAAAA,KAAK,EAAE/D,QAAQ,CAACgE,cAD0C;AAE1DC,IAAAA,IAAI,EAAEjE,QAAQ,CAACkE;AAF2C,GAAnC,GAGrBL,qBAvBJ;AAAA,MAwBIM,qBAAqB,GAAG9B,KAAK,CAAC+B,eAxBlC;AAyBAD,EAAAA,qBAAqB,GAAGA,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAAhE;;AAEA,MAAIE,OAAO,GAAGF,qBAAqB,CAACE,OAApC;AAAA,MACIC,QAAQ,GAAGH,qBAAqB,CAACG,QADrC;AAAA,MAEIF,eAAe,GAAG3E,wBAAwB,CAAC0E,qBAAD,EAAwB,CAAC,SAAD,EAAY,UAAZ,CAAxB,CAF9C;AAAA,MAGII,KAAK,GAAG9E,wBAAwB,CAAC4C,KAAD,EAAQ,CAAC,QAAD,EAAW,cAAX,EAA2B,kBAA3B,EAA+C,UAA/C,EAA2D,SAA3D,EAAsE,WAAtE,EAAmF,wBAAnF,EAA6G,cAA7G,EAA6H,2BAA7H,EAA0J,SAA1J,EAAqK,SAArK,EAAgL,cAAhL,EAAgM,cAAhM,EAAgN,MAAhN,EAAwN,oBAAxN,EAA8O,qBAA9O,EAAqQ,oBAArQ,EAA2R,iBAA3R,CAAR,CAHpC;;AAKA,MAAImC,aAAa,GAAG5E,KAAK,CAAC6E,MAAN,EAApB;;AAEA,MAAIC,eAAe,GAAG9E,KAAK,CAAC+E,QAAN,CAAe,IAAf,CAAtB;AAAA,MACIC,MAAM,GAAGF,eAAe,CAAC,CAAD,CAD5B;AAAA,MAEIG,SAAS,GAAGH,eAAe,CAAC,CAAD,CAF/B;;AAIA,MAAII,WAAW,GAAG5E,gBAAgB,CAAC,YAAY;AAC7C,QAAIoD,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACyB,KAAR,CAAc,KAAK,CAAnB,EAAsBC,SAAtB;AACD;AACF,GAJiC,CAAlC;AAKA,MAAIC,gBAAgB,GAAG/E,gBAAgB,CAAC,UAAUgF,qBAAV,EAAiC;AACvE,QAAI,CAAC5B,OAAD,IAAY4B,qBAAqB,IAAI,IAAzC,EAA+C;AAC7C;AACD;;AAEDC,IAAAA,YAAY,CAACX,aAAa,CAACY,OAAf,CAAZ;AACAZ,IAAAA,aAAa,CAACY,OAAd,GAAwBC,UAAU,CAAC,YAAY;AAC7CP,MAAAA,WAAW,CAAC,IAAD,EAAO,SAAP,CAAX;AACD,KAFiC,EAE/BI,qBAF+B,CAAlC;AAGD,GATsC,CAAvC;AAUAtF,EAAAA,KAAK,CAAC0F,SAAN,CAAgB,YAAY;AAC1B,QAAI7B,IAAJ,EAAU;AACRwB,MAAAA,gBAAgB,CAACpC,gBAAD,CAAhB;AACD;;AAED,WAAO,YAAY;AACjBsC,MAAAA,YAAY,CAACX,aAAa,CAACY,OAAf,CAAZ;AACD,KAFD;AAGD,GARD,EAQG,CAAC3B,IAAD,EAAOZ,gBAAP,EAAyBoC,gBAAzB,CARH,EA5DyE,CAoEzB;AAChD;;AAEA,MAAIM,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvCJ,IAAAA,YAAY,CAACX,aAAa,CAACY,OAAf,CAAZ;AACD,GAFD,CAvEyE,CAyEtE;AACH;;;AAGA,MAAII,YAAY,GAAG5F,KAAK,CAAC6F,WAAN,CAAkB,YAAY;AAC/C,QAAI5C,gBAAgB,IAAI,IAAxB,EAA8B;AAC5BoC,MAAAA,gBAAgB,CAACvB,kBAAkB,IAAI,IAAtB,GAA6BA,kBAA7B,GAAkDb,gBAAgB,GAAG,GAAtE,CAAhB;AACD;AACF,GAJkB,EAIhB,CAACA,gBAAD,EAAmBa,kBAAnB,EAAuCuB,gBAAvC,CAJgB,CAAnB;;AAMA,MAAIS,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtD,QAAIpC,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACoC,KAAD,CAAZ;AACD;;AAEDJ,IAAAA,WAAW;AACZ,GAND;;AAQA,MAAIK,gBAAgB,GAAG,SAASA,gBAAT,CAA0BD,KAA1B,EAAiC;AACtD,QAAInC,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACmC,KAAD,CAAZ;AACD;;AAEDH,IAAAA,YAAY;AACb,GAND;;AAQA,MAAIK,eAAe,GAAG,SAASA,eAAT,CAAyBF,KAAzB,EAAgC;AACpD,QAAIrC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACqC,KAAD,EAAQ,WAAR,CAAP;AACD;AACF,GAJD;;AAMA,MAAIG,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7ClB,IAAAA,SAAS,CAAC,IAAD,CAAT;;AAEA,QAAIP,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACyB,IAAD,CAAR;AACD;AACF,GAND;;AAQA,MAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBD,IAArB,EAA2BE,WAA3B,EAAwC;AACxDpB,IAAAA,SAAS,CAAC,KAAD,CAAT;;AAEA,QAAIR,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAAC0B,IAAD,EAAOE,WAAP,CAAP;AACD;AACF,GAND;;AAQArG,EAAAA,KAAK,CAAC0F,SAAN,CAAgB,YAAY;AAC1B;AACA,QAAI,CAAClC,yBAAD,IAA8BK,IAAlC,EAAwC;AACtCyC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCX,YAAjC;AACAU,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCZ,WAAhC;AACA,aAAO,YAAY;AACjBW,QAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCZ,YAApC;AACAU,QAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCb,WAAnC;AACD,OAHD;AAID;;AAED,WAAOc,SAAP;AACD,GAZD,EAYG,CAACjD,yBAAD,EAA4BoC,YAA5B,EAA0C/B,IAA1C,CAZH,EAzHyE,CAqIpB;;AAErD,MAAI,CAACA,IAAD,IAASmB,MAAb,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,SAAO,aAAahF,KAAK,CAAC0G,aAAN,CAAoBrG,iBAApB,EAAuCN,QAAQ,CAAC;AAClE4G,IAAAA,WAAW,EAAEV;AADqD,GAAD,EAEhE5C,sBAFgE,CAA/C,EAEQ,aAAarD,KAAK,CAAC0G,aAAN,CAAoB,KAApB,EAA2B3G,QAAQ,CAAC;AAC3EqD,IAAAA,SAAS,EAAElD,IAAI,CAACiD,OAAO,CAAC1B,IAAT,EAAe0B,OAAO,CAAC,eAAeyD,MAAf,CAAsBrG,UAAU,CAACuC,QAAD,CAAhC,EAA4C8D,MAA5C,CAAmDrG,UAAU,CAACwC,UAAD,CAA7D,CAAD,CAAtB,EAAoGK,SAApG,CAD4D;AAE3EO,IAAAA,YAAY,EAAEmC,gBAF6D;AAG3ElC,IAAAA,YAAY,EAAEoC,gBAH6D;AAI3EtD,IAAAA,GAAG,EAAEA;AAJsE,GAAD,EAKzEiC,KALyE,CAAnC,EAK9B,aAAa3E,KAAK,CAAC0G,aAAN,CAAoB1C,mBAApB,EAAyCjE,QAAQ,CAAC;AACxE8G,IAAAA,MAAM,EAAE,IADgE;AAExEC,IAAAA,EAAE,EAAEjD,IAFoE;AAGxEkD,IAAAA,OAAO,EAAE7C,kBAH+D;AAIxE8C,IAAAA,SAAS,EAAElE,QAAQ,KAAK,KAAb,GAAqB,MAArB,GAA8B,IAJ+B;AAKxE2B,IAAAA,OAAO,EAAE2B,WAL+D;AAMxE1B,IAAAA,QAAQ,EAAEwB;AAN8D,GAAD,EAOtE1B,eAPsE,CAAjD,EAOHtB,QAAQ,IAAI,aAAalD,KAAK,CAAC0G,aAAN,CAAoBjG,eAApB,EAAqCV,QAAQ,CAAC;AAC1F0D,IAAAA,OAAO,EAAEA,OADiF;AAE1Fd,IAAAA,MAAM,EAAEA;AAFkF,GAAD,EAGxFW,YAHwF,CAA7C,CAPtB,CALiB,CAFrB,CAApB;AAkBD,CA7J2B,CAA5B;AA8JA2D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC5E,QAAQ,CAAC6E,SAAT,GAAqB;AAC3D;AACA;AACA;AACA;;AAEA;;;AAGAzE,EAAAA,MAAM,EAAE1C,SAAS,CAACkG,IATyC;;AAW3D;;;;;;AAMAtD,EAAAA,YAAY,EAAE5C,SAAS,CAACoH,KAAV,CAAgB;AAC5BtE,IAAAA,UAAU,EAAE9C,SAAS,CAACqH,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,CAAhB,EAA6CC,UAD7B;AAE5BzE,IAAAA,QAAQ,EAAE7C,SAAS,CAACqH,KAAV,CAAgB,CAAC,QAAD,EAAW,KAAX,CAAhB,EAAmCC;AAFjB,GAAhB,CAjB6C;;AAsB3D;;;;;;;AAOAtE,EAAAA,gBAAgB,EAAEhD,SAAS,CAACuH,MA7B+B;;AA+B3D;;;AAGAtE,EAAAA,QAAQ,EAAEjD,SAAS,CAACwH,OAlCuC;;AAoC3D;;;AAGAtE,EAAAA,OAAO,EAAElD,SAAS,CAACyH,MAvCwC;;AAyC3D;;;AAGAtE,EAAAA,SAAS,EAAEnD,SAAS,CAAC0H,MA5CsC;;AA8C3D;;;AAGAtE,EAAAA,sBAAsB,EAAEpD,SAAS,CAACyH,MAjDyB;;AAmD3D;;;AAGApE,EAAAA,YAAY,EAAErD,SAAS,CAACyH,MAtDmC;;AAwD3D;;;;AAIAlE,EAAAA,yBAAyB,EAAEvD,SAAS,CAAC2H,IA5DsB;;AA8D3D;;;;;;AAMAC,EAAAA,GAAG,EAAE5H,SAAS,CAAC6H,GApE4C;;AAsE3D;;;AAGArE,EAAAA,OAAO,EAAExD,SAAS,CAACkG,IAzEwC;;AA2E3D;;;;;;;;;;AAUAzC,EAAAA,OAAO,EAAEzD,SAAS,CAAC8H,IArFwC;;AAuF3D;;;AAGApE,EAAAA,YAAY,EAAE1D,SAAS,CAAC8H,IA1FmC;;AA4F3D;;;AAGAnE,EAAAA,YAAY,EAAE3D,SAAS,CAAC8H,IA/FmC;;AAiG3D;;;AAGAlE,EAAAA,IAAI,EAAE5D,SAAS,CAAC2H,IApG2C;;AAsG3D;;;;;;AAMA9D,EAAAA,kBAAkB,EAAE7D,SAAS,CAACuH,MA5G6B;;AA8G3D;;;;;AAKAxD,EAAAA,mBAAmB,EAAE/D,SAAS,CAAC+H,WAnH4B;;AAqH3D;;;;;;;;AAQA9D,EAAAA,kBAAkB,EAAEjE,SAAS,CAACgI,SAAV,CAAoB,CAAChI,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAACoH,KAAV,CAAgB;AACzER,IAAAA,MAAM,EAAE5G,SAAS,CAACuH,MADuD;AAEzErD,IAAAA,KAAK,EAAElE,SAAS,CAACuH,MAFwD;AAGzEnD,IAAAA,IAAI,EAAEpE,SAAS,CAACuH;AAHyD,GAAhB,CAAnB,CAApB,CA7HuC;;AAmI3D;;;;;AAKAhD,EAAAA,eAAe,EAAEvE,SAAS,CAACyH;AAxIgC,CAA7D,GAyII,KAAK,CAzIT;AA0IA,eAAevH,UAAU,CAACO,MAAD,EAAS;AAChCwH,EAAAA,IAAI,EAAE,KAD0B;AAEhCC,EAAAA,IAAI,EAAE;AAF0B,CAAT,CAAV,CAGZ5F,QAHY,CAAf","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'left'\n  } : _props$anchorOrigin;\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEnter = _props$TransitionProp.onEnter,\n      onExited = _props$TransitionProp.onExited,\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, [\"onEnter\", \"onExited\"]),\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited(node) {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(function () {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up',\n    onEnter: handleEnter,\n    onExited: handleExited\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"]},"metadata":{},"sourceType":"module"}