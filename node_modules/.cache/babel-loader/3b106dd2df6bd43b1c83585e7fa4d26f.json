{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0,\n      // Reset browser default style.\n      flexShrink: 0,\n      borderWidth: 0,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider,\n      borderBottomWidth: 'thin'\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `variant=\"fullWidth\"`. */\n    fullWidth: {},\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      borderColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      borderBottomWidth: 0,\n      borderRightWidth: 'thin'\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    },\n\n    /* Styles applied to the root element if divider have text. */\n    withChildren: {\n      display: 'flex',\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      border: 0,\n      '&::before, &::after': {\n        position: 'relative',\n        width: '100%',\n        borderColor: theme.palette.divider,\n        borderTop: 'thin',\n        borderLeft: 0,\n        borderRight: 0,\n        borderBottom: 0,\n        borderStyle: 'solid',\n        top: '50%',\n        content: '\"\"',\n        transform: 'translateY(50%)'\n      }\n    },\n\n    /* Styles applied to the root element if divider have text and `orientation=\"vertical\"`. */\n    withChildrenVertical: {\n      flexDirection: 'column',\n      '&::before, &::after': {\n        height: '100%',\n        top: '0%',\n        left: '50%',\n        borderColor: theme.palette.divider,\n        borderTop: 0,\n        borderLeft: 'thin',\n        borderStyle: 'solid',\n        transform: 'translateX(0%)'\n      }\n    },\n\n    /* Styles applied to the root element if `textAlign=\"right\" orientation=\"horizontal\"`. */\n    textAlignRight: {\n      '&::before': {\n        width: '90%'\n      },\n      '&::after': {\n        width: '10%'\n      }\n    },\n\n    /* Styles applied to the root element if `textAlign=\"left\" orientation=\"horizontal\"`. */\n    textAlignLeft: {\n      '&::before': {\n        width: '10%'\n      },\n      '&::after': {\n        width: '90%'\n      }\n    },\n\n    /* Styles applied to the span children element if `orientation=\"horizontal\"`. */\n    wrapper: {\n      display: 'inline-block',\n      paddingLeft: theme.spacing(1.2),\n      paddingRight: theme.spacing(1.2)\n    },\n\n    /* Styles applied to the span children element if `orientation=\"vertical\"`. */\n    wrapperVertical: {\n      paddingTop: theme.spacing(1.2),\n      paddingBottom: theme.spacing(1.2)\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      children = props.children,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? children ? 'div' : 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$textAlign = props.textAlign,\n      textAlign = _props$textAlign === void 0 ? 'center' : _props$textAlign,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"children\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"]);\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    absolute: absolute,\n    component: Component,\n    flexItem: flexItem,\n    light: light,\n    orientation: orientation,\n    role: role,\n    textAlign: textAlign,\n    variant: variant\n  }), 'MuiDivider');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, orientation === 'vertical' ? [classes.vertical, children && classes.withChildrenVertical] : {\n      'right': classes.textAlignRight,\n      'left': classes.textAlignLeft\n    }[textAlign], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, children && classes.withChildren),\n    role: role,\n    ref: ref\n  }, other), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.wrapper, orientation === 'vertical' && classes.wrapperVertical)\n  }, children) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/mio/material-ui/hackaton-front/node_modules/@material-ui/core/esm/Divider/Divider.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","useThemeVariants","withStyles","fade","styles","theme","root","margin","flexShrink","borderWidth","borderStyle","borderColor","palette","divider","borderBottomWidth","absolute","position","bottom","left","width","inset","marginLeft","fullWidth","light","middle","spacing","marginRight","vertical","height","borderRightWidth","flexItem","alignSelf","withChildren","display","whiteSpace","textAlign","border","borderTop","borderLeft","borderRight","borderBottom","top","content","transform","withChildrenVertical","flexDirection","textAlignRight","textAlignLeft","wrapper","paddingLeft","paddingRight","wrapperVertical","paddingTop","paddingBottom","Divider","forwardRef","props","ref","_props$absolute","classes","className","children","_props$component","component","Component","_props$flexItem","_props$light","_props$orientation","orientation","_props$role","role","undefined","_props$textAlign","_props$variant","variant","other","themeVariantsClasses","createElement","process","env","NODE_ENV","propTypes","bool","node","object","string","elementType","oneOf","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0,\n      // Reset browser default style.\n      flexShrink: 0,\n      borderWidth: 0,\n      borderStyle: 'solid',\n      borderColor: theme.palette.divider,\n      borderBottomWidth: 'thin'\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `variant=\"fullWidth\"`. */\n    fullWidth: {},\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      borderColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      borderBottomWidth: 0,\n      borderRightWidth: 'thin'\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    },\n\n    /* Styles applied to the root element if divider have text. */\n    withChildren: {\n      display: 'flex',\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      border: 0,\n      '&::before, &::after': {\n        position: 'relative',\n        width: '100%',\n        borderColor: theme.palette.divider,\n        borderTop: 'thin',\n        borderLeft: 0,\n        borderRight: 0,\n        borderBottom: 0,\n        borderStyle: 'solid',\n        top: '50%',\n        content: '\"\"',\n        transform: 'translateY(50%)'\n      }\n    },\n\n    /* Styles applied to the root element if divider have text and `orientation=\"vertical\"`. */\n    withChildrenVertical: {\n      flexDirection: 'column',\n      '&::before, &::after': {\n        height: '100%',\n        top: '0%',\n        left: '50%',\n        borderColor: theme.palette.divider,\n        borderTop: 0,\n        borderLeft: 'thin',\n        borderStyle: 'solid',\n        transform: 'translateX(0%)'\n      }\n    },\n\n    /* Styles applied to the root element if `textAlign=\"right\" orientation=\"horizontal\"`. */\n    textAlignRight: {\n      '&::before': {\n        width: '90%'\n      },\n      '&::after': {\n        width: '10%'\n      }\n    },\n\n    /* Styles applied to the root element if `textAlign=\"left\" orientation=\"horizontal\"`. */\n    textAlignLeft: {\n      '&::before': {\n        width: '10%'\n      },\n      '&::after': {\n        width: '90%'\n      }\n    },\n\n    /* Styles applied to the span children element if `orientation=\"horizontal\"`. */\n    wrapper: {\n      display: 'inline-block',\n      paddingLeft: theme.spacing(1.2),\n      paddingRight: theme.spacing(1.2)\n    },\n\n    /* Styles applied to the span children element if `orientation=\"vertical\"`. */\n    wrapperVertical: {\n      paddingTop: theme.spacing(1.2),\n      paddingBottom: theme.spacing(1.2)\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      children = props.children,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? children ? 'div' : 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$textAlign = props.textAlign,\n      textAlign = _props$textAlign === void 0 ? 'center' : _props$textAlign,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"children\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"]);\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    absolute: absolute,\n    component: Component,\n    flexItem: flexItem,\n    light: light,\n    orientation: orientation,\n    role: role,\n    textAlign: textAlign,\n    variant: variant\n  }), 'MuiDivider');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, orientation === 'vertical' ? [classes.vertical, children && classes.withChildrenVertical] : {\n      'right': classes.textAlignRight,\n      'left': classes.textAlignLeft\n    }[textAlign], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, children && classes.withChildren),\n    role: role,\n    ref: ref\n  }, other), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.wrapper, orientation === 'vertical' && classes.wrapperVertical)\n  }, children) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"]},"metadata":{},"sourceType":"module"}