{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport ownerWindow from '../utils/ownerWindow';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      maxRows = props.maxRows,\n      _props$minRows = props.minRows,\n      minRows = _props$minRows === void 0 ? 1 : _props$minRows,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var containerWindow = ownerWindow(input);\n    var computedStyle = containerWindow.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    var containerWindow = ownerWindow(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/mio/material-ui/hackaton-front/node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","debounce","useForkRef","useEnhancedEffect","ownerWindow","getStyleValue","computedStyle","property","parseInt","styles","shadow","visibility","position","overflow","height","top","left","transform","TextareaAutosize","forwardRef","props","ref","onChange","maxRows","_props$minRows","minRows","style","value","other","_React$useRef","useRef","isControlled","current","inputRef","handleRef","shadowRef","renders","_React$useState","useState","state","setState","syncHeight","useCallback","input","containerWindow","getComputedStyle","inputShallow","width","placeholder","slice","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","prevState","process","env","NODE_ENV","console","error","join","useEffect","handleResize","addEventListener","clear","removeEventListener","handleChange","event","createElement","Fragment","rows","className","readOnly","tabIndex","propTypes","string","oneOfType","number","func","object","arrayOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport ownerWindow from '../utils/ownerWindow';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      maxRows = props.maxRows,\n      _props$minRows = props.minRows,\n      minRows = _props$minRows === void 0 ? 1 : _props$minRows,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var containerWindow = ownerWindow(input);\n    var computedStyle = containerWindow.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    var containerWindow = ownerWindow(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;"]},"metadata":{},"sourceType":"module"}