{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/src/context/LayoutContext.js\";\nimport React from \"react\";\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state,\n        isSidebarOpened: !state.isSidebarOpened\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction LayoutProvider({\n  children\n}) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true\n  });\n  return /*#__PURE__*/React.createElement(LayoutStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LayoutDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar }; // ###########################################################\n\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\"\n  });\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/src/context/LayoutContext.js"],"names":["React","LayoutStateContext","createContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","children","dispatch","useReducer","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,kBAAkB,GAAGD,KAAK,CAACE,aAAN,EAAzB;AACA,IAAIC,qBAAqB,GAAGH,KAAK,CAACE,aAAN,EAA5B;;AAEA,SAASE,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,eAAe,EAAE,CAACH,KAAK,CAACG;AAApC,OAAP;;AACF;AAAS;AACP,cAAM,IAAIC,KAAJ,CAAW,0BAAyBH,MAAM,CAACC,IAAK,EAAhD,CAAN;AACD;AALH;AAOD;;AAED,SAASG,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AACpC,MAAI,CAACN,KAAD,EAAQO,QAAR,IAAoBZ,KAAK,CAACa,UAAN,CAAiBT,aAAjB,EAAgC;AACtDI,IAAAA,eAAe,EAAE;AADqC,GAAhC,CAAxB;AAGA,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEH,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEO,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF,CADF;AAOD;;AAED,SAASG,cAAT,GAA0B;AACxB,MAAIC,OAAO,GAAGf,KAAK,CAACgB,UAAN,CAAiBf,kBAAjB,CAAd;;AACA,MAAIc,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIR,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,SAAOM,OAAP;AACD;;AAED,SAASG,iBAAT,GAA6B;AAC3B,MAAIH,OAAO,GAAGf,KAAK,CAACgB,UAAN,CAAiBb,qBAAjB,CAAd;;AACA,MAAIY,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIR,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,SAAOM,OAAP;AACD;;AAED,SAASL,cAAT,EAAyBI,cAAzB,EAAyCI,iBAAzC,EAA4DC,aAA5D,G,CAEA;;AACA,SAASA,aAAT,CAAuBP,QAAvB,EAAiC;AAC/BA,EAAAA,QAAQ,CAAC;AACPL,IAAAA,IAAI,EAAE;AADC,GAAD,CAAR;AAGD","sourcesContent":["import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n"]},"metadata":{},"sourceType":"module"}