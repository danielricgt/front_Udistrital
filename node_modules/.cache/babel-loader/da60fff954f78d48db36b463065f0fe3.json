{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Registry/registry.js\";\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, TextField, Paper, Fade } from \"@material-ui/core\";\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport useStyles from \"./style\";\nimport { withRouter } from \"react-router-dom\"; //Context\n\nimport { useUserDispatch, userRegistry } from \"../../context/UserContext\";\nimport logo from \"../../assets/images/logo.png\";\n\nfunction Registry(props) {\n  var classes = useStyles();\n  var [isLoading, setIsLoading] = useState(false);\n  var [identificationValue, setIdentificationValue] = useState(\"\");\n  var [nameValue, setNameValue] = useState(\"\");\n  var [lastnameValue, setLastnameValue] = useState(\"\");\n  var [emailValue, setEmailValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [passwordBValue, setPasswordBValue] = useState(\"\");\n  var [answer, setAnswer] = useState(null);\n  var [error, setError] = useState(null);\n  const [open, setOpen] = React.useState(true); // global\n  // var userDispatch = useUserDispatch();\n  //render() {\n  // const { showAlert } = this.state;\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"elevation\",\n    elevation: 5,\n    className: classes.loginBackground,\n    square: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Registro\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logotypeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.logotypeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"identification\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: identificationValue,\n    onChange: e => setIdentificationValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"N\\xFAmero de identificaci\\xF3n\",\n    label: \"N\\xFAmero de identificaci\\xF3n\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: nameValue,\n    onChange: e => setNameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Nombre\",\n    label: \"Nombre\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"lastname\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: lastnameValue,\n    onChange: e => setLastnameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Apellidos\",\n    label: \"Apellidos\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: registryValue,\n    onChange: e => setRegistryValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Correo\",\n    label: \"Correo\",\n    type: \"email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Contrase\\xF1a\",\n    label: \"Contrase\\xF1a\",\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"repeatpassword\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Repetir Contrase\\xF1a\",\n    label: \"Repetir Contrase\\xF1a\",\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: registryValue === '' || passwordValue === '',\n    onClick: () => userRegistry(registryValue, passwordValue, props.history, setIsLoading, setError, setAnswer),\n    variant: \"contained\",\n    className: classes.loginButtom,\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Registrarse\"))))), answer ? /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      size: \"small\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }, \"Alg\\xF3 pas\\xF3 verifica los datos\")) : /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  })); //}\n}\n\nexport default withRouter(Registry);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Registry/registry.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","TextField","Paper","Fade","Alert","CloseIcon","IconButton","Collapse","useStyles","withRouter","useUserDispatch","userRegistry","logo","Registry","props","classes","isLoading","setIsLoading","identificationValue","setIdentificationValue","nameValue","setNameValue","lastnameValue","setLastnameValue","emailValue","setEmailValue","passwordValue","setPasswordValue","passwordBValue","setPasswordBValue","answer","setAnswer","error","setError","open","setOpen","container","loginBackground","formContainer","form","title","logotypeContainer","logotypeImage","underline","textFieldUnderline","input","textField","e","target","value","registryValue","setRegistryValue","formButtons","loginLoader","history","loginButtom","errorMessage"],"mappings":"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","sourcesContent":["import React , { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  TextField,\n  Paper,\n  Fade,\n} from \"@material-ui/core\";\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport useStyles from \"./style\";\nimport { withRouter } from \"react-router-dom\";\n//Context\nimport { useUserDispatch, userRegistry } from \"../../context/UserContext\";\nimport logo from \"../../assets/images/logo.png\";\n\nfunction Registry(props) {\nvar classes= useStyles();\n\nvar [isLoading, setIsLoading] = useState(false);\nvar [identificationValue, setIdentificationValue] = useState(\"\");\nvar [nameValue, setNameValue] = useState(\"\");\nvar [lastnameValue, setLastnameValue] = useState(\"\");\nvar [emailValue, setEmailValue] = useState(\"\");\nvar [passwordValue, setPasswordValue] = useState(\"\");\nvar [passwordBValue, setPasswordBValue] = useState(\"\");\nvar [answer, setAnswer] = useState(null);\nvar [error, setError] = useState(null);\nconst [open, setOpen] = React.useState(true);\n  // global\n  // var userDispatch = useUserDispatch();\n  //render() {\n\n   // const { showAlert } = this.state;\n  return (\n    <Grid container className={classes.container}>\n      <Paper\n        variant=\"elevation\"\n        elevation={5}\n        className={classes.loginBackground}\n        square= {false}\n      >\n        <div className={classes.formContainer}>\n          <div className={classes.form}>\n            <Typography variant=\"h1\" className={classes.title}>\n              Registro\n            </Typography>\n            <div className={classes.logotypeContainer}>\n              <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n            </div>\n            <TextField\n              id=\"identification\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={identificationValue}\n              onChange={e => setIdentificationValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Número de identificación\"\n              label=\"Número de identificación\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"name\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={nameValue}\n              onChange={e => setNameValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Nombre\"\n              label=\"Nombre\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"lastname\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={lastnameValue}\n              onChange={e => setLastnameValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Apellidos\"\n              label=\"Apellidos\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"email\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={registryValue}\n              onChange={e => setRegistryValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Correo\"\n              label=\"Correo\"\n              type=\"email\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={passwordValue}\n              onChange={e => setPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Contraseña\"\n              label=\"Contraseña\"\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"repeatpassword\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={passwordValue}\n              onChange={e => setPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Repetir Contraseña\"\n              label=\"Repetir Contraseña\"\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <div className={classes.formButtons}>\n            {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                <Button\n                  disabled={\n                    registryValue === '' || passwordValue === ''\n                  }\n                  onClick={() =>\n                    userRegistry(\n                      registryValue,\n                      passwordValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                      setAnswer\n                    )\n                  }\n                  variant=\"contained\"\n                  className={classes.loginButtom}\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  Registrarse\n                </Button>\n                )}\n            </div>\n          </div>\n        </div>\n\n      </Paper>\n      {\n                  answer?(\n                    <Collapse in={open}>\n                          <Alert\n                          severity=\"error\"\n                            action={\n                              <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => {\n                                  setOpen(false);\n                                }}\n                              >\n                                <CloseIcon fontSize=\"inherit\" />\n                              </IconButton>\n                            }\n                          >\n                            Algó pasó verifica los datos\n                          </Alert>\n                          </Collapse>\n                  ):\n                  (\n                    <Typography color=\"secondary\" className={classes.errorMessage}>\n                    \n                  </Typography>\n                  )\n                }\n    </Grid>\n  );\n//}\n}\n\nexport default withRouter(Registry);"]},"metadata":{},"sourceType":"module"}