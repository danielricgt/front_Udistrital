{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS_STANDARD * 2,\n      lineHeight: 1,\n      padding: '0 6px',\n      height: RADIUS_STANDARD * 2,\n      borderRadius: RADIUS_STANDARD,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"`. */\n    standard: {},\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangular\"`. */\n    anchorOriginTopRightRectangular: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangular\"`. */\n    anchorOriginBottomRightRectangular: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangular\"`. */\n    anchorOriginTopLeftRectangular: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangular\"`. */\n    anchorOriginBottomLeftRectangular: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circular\"`. */\n    anchorOriginTopRightCircular: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circular\"`. */\n    anchorOriginBottomRightCircular: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circular\"`. */\n    anchorOriginTopLeftCircular: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circular\"`. */\n    anchorOriginBottomLeftCircular: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  };\n};\n\nvar usePreviousProps = function usePreviousProps(value) {\n  var ref = React.useRef({});\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nvar Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOriginProp = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContentProp = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      colorProp = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      maxProp = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlapProp = _props$overlap === void 0 ? 'rectangular' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variantProp = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    color: colorProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  var _ref = invisible ? prevProps : props,\n      _ref$anchorOrigin = _ref.anchorOrigin,\n      anchorOrigin = _ref$anchorOrigin === void 0 ? anchorOriginProp : _ref$anchorOrigin,\n      badgeContent = _ref.badgeContent,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? colorProp : _ref$color,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? maxProp : _ref$max,\n      _ref$overlap = _ref.overlap,\n      overlap = _ref$overlap === void 0 ? overlapProp : _ref$overlap,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? variantProp : _ref$variant;\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    anchorOrigin: anchorOrigin,\n    badgeContent: badgeContent,\n    color: color,\n    component: ComponentProp,\n    invisible: invisible,\n    max: max,\n    overlap: overlap,\n    showZero: showZero,\n    variant: variant\n  }), 'MuiBadge');\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[variant], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], themeVariantsClasses, color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/node_modules/@material-ui/core/esm/Badge/Badge.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","useThemeVariants","withStyles","capitalize","RADIUS_STANDARD","RADIUS_DOT","styles","theme","root","position","display","verticalAlign","flexShrink","badge","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","backgroundColor","palette","primary","main","color","contrastText","colorSecondary","secondary","colorError","error","dot","standard","anchorOriginTopRightRectangular","top","right","transform","transformOrigin","anchorOriginBottomRightRectangular","bottom","anchorOriginTopLeftRectangular","left","anchorOriginBottomLeftRectangular","anchorOriginTopRightCircular","anchorOriginBottomRightCircular","anchorOriginTopLeftCircular","anchorOriginBottomLeftCircular","invisible","leavingScreen","usePreviousProps","value","ref","useRef","useEffect","current","Badge","forwardRef","props","_props$anchorOrigin","anchorOrigin","anchorOriginProp","vertical","horizontal","badgeContentProp","badgeContent","children","classes","className","_props$color","colorProp","_props$component","component","ComponentProp","invisibleProp","_props$max","max","maxProp","_props$overlap","overlap","overlapProp","_props$showZero","showZero","_props$variant","variant","variantProp","other","prevProps","_ref","_ref$anchorOrigin","_ref$color","_ref$max","_ref$overlap","_ref$variant","themeVariantsClasses","displayValue","concat","createElement","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","object","string","elementType","bool","number","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS_STANDARD * 2,\n      lineHeight: 1,\n      padding: '0 6px',\n      height: RADIUS_STANDARD * 2,\n      borderRadius: RADIUS_STANDARD,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"`. */\n    standard: {},\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangular\"`. */\n    anchorOriginTopRightRectangular: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangular\"`. */\n    anchorOriginBottomRightRectangular: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangular\"`. */\n    anchorOriginTopLeftRectangular: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangular\"`. */\n    anchorOriginBottomLeftRectangular: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circular\"`. */\n    anchorOriginTopRightCircular: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circular\"`. */\n    anchorOriginBottomRightCircular: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circular\"`. */\n    anchorOriginTopLeftCircular: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circular\"`. */\n    anchorOriginBottomLeftCircular: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  };\n};\n\nvar usePreviousProps = function usePreviousProps(value) {\n  var ref = React.useRef({});\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nvar Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOriginProp = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContentProp = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      colorProp = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      maxProp = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlapProp = _props$overlap === void 0 ? 'rectangular' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variantProp = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    color: colorProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  var _ref = invisible ? prevProps : props,\n      _ref$anchorOrigin = _ref.anchorOrigin,\n      anchorOrigin = _ref$anchorOrigin === void 0 ? anchorOriginProp : _ref$anchorOrigin,\n      badgeContent = _ref.badgeContent,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? colorProp : _ref$color,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? maxProp : _ref$max,\n      _ref$overlap = _ref.overlap,\n      overlap = _ref$overlap === void 0 ? overlapProp : _ref$overlap,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? variantProp : _ref$variant;\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    anchorOrigin: anchorOrigin,\n    badgeContent: badgeContent,\n    color: color,\n    component: ComponentProp,\n    invisible: invisible,\n    max: max,\n    overlap: overlap,\n    showZero: showZero,\n    variant: variant\n  }), 'MuiBadge');\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[variant], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], themeVariantsClasses, color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);"]},"metadata":{},"sourceType":"module"}