{"ast":null,"code":"import _defineProperty from\"/Users/charlyagudelo/Documents/proyDanny/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"/Users/charlyagudelo/Documents/proyDanny/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Button}from\"@material-ui/core\";import{NotificationsNone as NotificationsIcon,ThumbUp as ThumbUpIcon,ShoppingCart as ShoppingCartIcon,LocalOffer as TicketIcon,BusinessCenter as DeliveredIcon,SmsFailed as FeedbackIcon,DiscFull as DiscIcon,Email as MessageIcon,Report as ReportIcon,Error as DefenceIcon,AccountBox as CustomerIcon,Done as ShippedIcon,Publish as UploadIcon}from\"@material-ui/icons\";import{useTheme}from\"@material-ui/styles\";import classnames from\"classnames\";import tinycolor from\"tinycolor2\";// styles\nimport useStyles from\"./styles\";// components\nimport{Typography}from\"../Wrappers\";var typesIcons={\"e-commerce\":/*#__PURE__*/React.createElement(ShoppingCartIcon,null),notification:/*#__PURE__*/React.createElement(NotificationsIcon,null),offer:/*#__PURE__*/React.createElement(TicketIcon,null),info:/*#__PURE__*/React.createElement(ThumbUpIcon,null),message:/*#__PURE__*/React.createElement(MessageIcon,null),feedback:/*#__PURE__*/React.createElement(FeedbackIcon,null),customer:/*#__PURE__*/React.createElement(CustomerIcon,null),shipped:/*#__PURE__*/React.createElement(ShippedIcon,null),delivered:/*#__PURE__*/React.createElement(DeliveredIcon,null),defence:/*#__PURE__*/React.createElement(DefenceIcon,null),report:/*#__PURE__*/React.createElement(ReportIcon,null),upload:/*#__PURE__*/React.createElement(UploadIcon,null),disc:/*#__PURE__*/React.createElement(DiscIcon,null)};export default function Notification(_ref){var _classnames,_classnames2;var variant=_ref.variant,props=_objectWithoutProperties(_ref,[\"variant\"]);var classes=useStyles();var theme=useTheme();var icon=getIconByType(props.type);var iconWithStyles=React.cloneElement(icon,{classes:{root:classes.notificationIcon},style:{color:variant!==\"contained\"&&theme.palette[props.color]&&theme.palette[props.color].main}});return/*#__PURE__*/React.createElement(\"div\",{className:classnames(classes.notificationContainer,props.className,(_classnames={},_defineProperty(_classnames,classes.notificationContained,variant===\"contained\"),_defineProperty(_classnames,classes.notificationContainedShadowless,props.shadowless),_classnames)),style:{backgroundColor:variant===\"contained\"&&theme.palette[props.color]&&theme.palette[props.color].main}},/*#__PURE__*/React.createElement(\"div\",{className:classnames(classes.notificationIconContainer,(_classnames2={},_defineProperty(_classnames2,classes.notificationIconContainerContained,variant===\"contained\"),_defineProperty(_classnames2,classes.notificationIconContainerRounded,variant===\"rounded\"),_classnames2)),style:{backgroundColor:variant===\"rounded\"&&theme.palette[props.color]&&tinycolor(theme.palette[props.color].main).setAlpha(0.15).toRgbString()}},iconWithStyles),/*#__PURE__*/React.createElement(\"div\",{className:classes.messageContainer},/*#__PURE__*/React.createElement(Typography,{className:classnames(_defineProperty({},classes.containedTypography,variant===\"contained\")),variant:props.typographyVariant,size:variant!==\"contained\"&&!props.typographyVariant&&\"md\"},props.message),props.extraButton&&props.extraButtonClick&&/*#__PURE__*/React.createElement(Button,{onClick:props.extraButtonClick,disableRipple:true,className:classes.extraButton},props.extraButton)));}// ####################################################################\nfunction getIconByType(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"offer\";return typesIcons[type];}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/components/Notification/Notification.js"],"names":["React","Button","NotificationsNone","NotificationsIcon","ThumbUp","ThumbUpIcon","ShoppingCart","ShoppingCartIcon","LocalOffer","TicketIcon","BusinessCenter","DeliveredIcon","SmsFailed","FeedbackIcon","DiscFull","DiscIcon","Email","MessageIcon","Report","ReportIcon","Error","DefenceIcon","AccountBox","CustomerIcon","Done","ShippedIcon","Publish","UploadIcon","useTheme","classnames","tinycolor","useStyles","Typography","typesIcons","notification","offer","info","message","feedback","customer","shipped","delivered","defence","report","upload","disc","Notification","variant","props","classes","theme","icon","getIconByType","type","iconWithStyles","cloneElement","root","notificationIcon","style","color","palette","main","notificationContainer","className","notificationContained","notificationContainedShadowless","shadowless","backgroundColor","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","setAlpha","toRgbString","messageContainer","containedTypography","typographyVariant","extraButton","extraButtonClick"],"mappings":"gWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,OACEC,iBAAiB,GAAIC,CAAAA,iBADvB,CAEEC,OAAO,GAAIC,CAAAA,WAFb,CAGEC,YAAY,GAAIC,CAAAA,gBAHlB,CAIEC,UAAU,GAAIC,CAAAA,UAJhB,CAKEC,cAAc,GAAIC,CAAAA,aALpB,CAMEC,SAAS,GAAIC,CAAAA,YANf,CAOEC,QAAQ,GAAIC,CAAAA,QAPd,CAQEC,KAAK,GAAIC,CAAAA,WARX,CASEC,MAAM,GAAIC,CAAAA,UATZ,CAUEC,KAAK,GAAIC,CAAAA,WAVX,CAWEC,UAAU,GAAIC,CAAAA,YAXhB,CAYEC,IAAI,GAAIC,CAAAA,WAZV,CAaEC,OAAO,GAAIC,CAAAA,UAbb,KAcO,oBAdP,CAeA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAEA;AACA,OAASC,UAAT,KAA2B,aAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAG,CACjB,0BAAc,oBAAC,gBAAD,MADG,CAEjBC,YAAY,cAAE,oBAAC,iBAAD,MAFG,CAGjBC,KAAK,cAAE,oBAAC,UAAD,MAHU,CAIjBC,IAAI,cAAE,oBAAC,WAAD,MAJW,CAKjBC,OAAO,cAAE,oBAAC,WAAD,MALQ,CAMjBC,QAAQ,cAAE,oBAAC,YAAD,MANO,CAOjBC,QAAQ,cAAE,oBAAC,YAAD,MAPO,CAQjBC,OAAO,cAAE,oBAAC,WAAD,MARQ,CASjBC,SAAS,cAAE,oBAAC,aAAD,MATM,CAUjBC,OAAO,cAAE,oBAAC,WAAD,MAVQ,CAWjBC,MAAM,cAAE,oBAAC,UAAD,MAXS,CAYjBC,MAAM,cAAE,oBAAC,UAAD,MAZS,CAajBC,IAAI,cAAE,oBAAC,QAAD,MAbW,CAAnB,CAgBA,cAAe,SAASC,CAAAA,YAAT,MAA6C,iCAArBC,CAAAA,OAAqB,MAArBA,OAAqB,CAATC,KAAS,4CAC1D,GAAIC,CAAAA,OAAO,CAAGlB,SAAS,EAAvB,CACA,GAAImB,CAAAA,KAAK,CAAGtB,QAAQ,EAApB,CAEA,GAAMuB,CAAAA,IAAI,CAAGC,aAAa,CAACJ,KAAK,CAACK,IAAP,CAA1B,CACA,GAAMC,CAAAA,cAAc,CAAGtD,KAAK,CAACuD,YAAN,CAAmBJ,IAAnB,CAAyB,CAC9CF,OAAO,CAAE,CACPO,IAAI,CAAEP,OAAO,CAACQ,gBADP,CADqC,CAI9CC,KAAK,CAAE,CACLC,KAAK,CACHZ,OAAO,GAAK,WAAZ,EACAG,KAAK,CAACU,OAAN,CAAcZ,KAAK,CAACW,KAApB,CADA,EAEAT,KAAK,CAACU,OAAN,CAAcZ,KAAK,CAACW,KAApB,EAA2BE,IAJxB,CAJuC,CAAzB,CAAvB,CAYA,mBACE,2BACE,SAAS,CAAEhC,UAAU,CAACoB,OAAO,CAACa,qBAAT,CAAgCd,KAAK,CAACe,SAAtC,6CAClBd,OAAO,CAACe,qBADU,CACcjB,OAAO,GAAK,WAD1B,8BAElBE,OAAO,CAACgB,+BAFU,CAEwBjB,KAAK,CAACkB,UAF9B,eADvB,CAKE,KAAK,CAAE,CACLC,eAAe,CACbpB,OAAO,GAAK,WAAZ,EACAG,KAAK,CAACU,OAAN,CAAcZ,KAAK,CAACW,KAApB,CADA,EAEAT,KAAK,CAACU,OAAN,CAAcZ,KAAK,CAACW,KAApB,EAA2BE,IAJxB,CALT,eAYE,2BACE,SAAS,CAAEhC,UAAU,CAACoB,OAAO,CAACmB,yBAAT,+CAClBnB,OAAO,CAACoB,kCADU,CAC2BtB,OAAO,GAAK,WADvC,+BAElBE,OAAO,CAACqB,gCAFU,CAEyBvB,OAAO,GAAK,SAFrC,gBADvB,CAKE,KAAK,CAAE,CACLoB,eAAe,CACbpB,OAAO,GAAK,SAAZ,EACAG,KAAK,CAACU,OAAN,CAAcZ,KAAK,CAACW,KAApB,CADA,EAEA7B,SAAS,CAACoB,KAAK,CAACU,OAAN,CAAcZ,KAAK,CAACW,KAApB,EAA2BE,IAA5B,CAAT,CACGU,QADH,CACY,IADZ,EAEGC,WAFH,EAJG,CALT,EAcGlB,cAdH,CAZF,cA4BE,2BAAK,SAAS,CAAEL,OAAO,CAACwB,gBAAxB,eACE,oBAAC,UAAD,EACE,SAAS,CAAE5C,UAAU,oBAClBoB,OAAO,CAACyB,mBADU,CACY3B,OAAO,GAAK,WADxB,EADvB,CAIE,OAAO,CAAEC,KAAK,CAAC2B,iBAJjB,CAKE,IAAI,CAAE5B,OAAO,GAAK,WAAZ,EAA2B,CAACC,KAAK,CAAC2B,iBAAlC,EAAuD,IAL/D,EAOG3B,KAAK,CAACX,OAPT,CADF,CAUGW,KAAK,CAAC4B,WAAN,EAAqB5B,KAAK,CAAC6B,gBAA3B,eACC,oBAAC,MAAD,EACE,OAAO,CAAE7B,KAAK,CAAC6B,gBADjB,CAEE,aAAa,KAFf,CAGE,SAAS,CAAE5B,OAAO,CAAC2B,WAHrB,EAKG5B,KAAK,CAAC4B,WALT,CAXJ,CA5BF,CADF,CAmDD,CAED;AACA,QAASxB,CAAAA,aAAT,EAAuC,IAAhBC,CAAAA,IAAgB,2DAAT,OAAS,CACrC,MAAOpB,CAAAA,UAAU,CAACoB,IAAD,CAAjB,CACD","sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n"]},"metadata":{},"sourceType":"module"}