{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/components/Header/Header.js\";\nimport React, { useState } from \"react\";\nimport { AppBar, Toolbar, IconButton, InputBase, Menu, MenuItem, Fab, Link } from \"@material-ui/core\";\nimport { Menu as MenuIcon, MailOutline as MailIcon, NotificationsNone as NotificationsIcon, Person as AccountIcon, Search as SearchIcon, Send as SendIcon, ArrowBack as ArrowBackIcon } from \"@material-ui/icons\";\nimport classNames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\"; // context\n\nimport { useLayoutState, useLayoutDispatch, toggleSidebar } from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\nconst messages = [{\n  id: 0,\n  variant: \"warning\",\n  name: \"Jane Hew\",\n  message: \"Hey! How is it going?\",\n  time: \"9:32\"\n}, {\n  id: 1,\n  variant: \"success\",\n  name: \"Lloyd Brown\",\n  message: \"Check out my new Dashboard\",\n  time: \"9:18\"\n}, {\n  id: 2,\n  variant: \"primary\",\n  name: \"Mark Winstein\",\n  message: \"I want rearrange the appointment\",\n  time: \"9:15\"\n}, {\n  id: 3,\n  variant: \"secondary\",\n  name: \"Liana Dutti\",\n  message: \"Good news from sale department\",\n  time: \"9:09\"\n}];\n/** \nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];**/\n\nexport default function Header(props) {\n  var classes = useStyles(); // global\n\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch(); // local\n\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true); // var [notificationsMenu, setNotificationsMenu] = useState(null);\n  // var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: () => toggleSidebar(layoutDispatch),\n    className: classNames(classes.headerMenuButton, classes.headerMenuButtonCollapse),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, layoutState.isSidebarOpened ? /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    classes: {\n      root: classNames(classes.headerIcon, classes.headerIconCollapse)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(MenuIcon, {\n    classes: {\n      root: classNames(classes.headerIcon, classes.headerIconCollapse)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    weight: \"medium\",\n    className: classes.logotype,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"React Material Admin\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.grow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    href: \"https://flatlogic.com/templates/react-material-admin-full\",\n    variant: \"outlined\",\n    color: \"secondary\",\n    style: {\n      marginRight: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Unlock full version\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.search, {\n      [classes.searchFocused]: isSearchOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.searchIcon, {\n      [classes.searchIconOpened]: isSearchOpen\n    }),\n    onClick: () => setSearchOpen(!isSearchOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"Search\\u2026\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"mail-menu\",\n    onClick: e => {\n      setNotificationsMenu(e.currentTarget);\n      setIsNotificationsUnread(false);\n    },\n    className: classes.headerMenuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: isNotificationsUnread ? notifications.length : null,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"mail-menu\",\n    onClick: e => {\n      setMailMenu(e.currentTarget);\n      setIsMailsUnread(false);\n    },\n    className: classes.headerMenuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: isMailsUnread ? messages.length : null,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MailIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\",\n    className: classes.headerMenuButton,\n    \"aria-controls\": \"profile-menu\",\n    onClick: e => setProfileMenu(e.currentTarget),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    classes: {\n      root: classes.headerIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"mail-menu\",\n    open: Boolean(mailMenu),\n    anchorEl: mailMenu,\n    onClose: () => setMailMenu(null),\n    MenuListProps: {\n      className: classes.headerMenuList\n    },\n    className: classes.headerMenu,\n    classes: {\n      paper: classes.profileMenu\n    },\n    disableAutoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    weight: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"New Messages\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    component: \"a\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, messages.length, \" New Messages\")), messages.map(message => /*#__PURE__*/React.createElement(MenuItem, {\n    key: message.id,\n    className: classes.messageNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messageNotificationSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    color: message.variant,\n    name: message.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, message.time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.messageNotificationSide, classes.messageNotificationBodySide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    weight: \"medium\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, message.name), /*#__PURE__*/React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, message.message)))), /*#__PURE__*/React.createElement(Fab, {\n    variant: \"extended\",\n    color: \"primary\",\n    \"aria-label\": \"Add\",\n    className: classes.sendMessageButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, \"Send New Message\", /*#__PURE__*/React.createElement(SendIcon, {\n    className: classes.sendButtonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"notifications-menu\",\n    open: Boolean(notificationsMenu),\n    anchorEl: notificationsMenu,\n    onClose: () => setNotificationsMenu(null),\n    className: classes.headerMenu,\n    disableAutoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, notifications.map(notification => /*#__PURE__*/React.createElement(MenuItem, {\n    key: notification.id,\n    onClick: () => setNotificationsMenu(null),\n    className: classes.headerMenuItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Notification, Object.assign({}, notification, {\n    typographyVariant: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"profile-menu\",\n    open: Boolean(profileMenu),\n    anchorEl: profileMenu,\n    onClose: () => setProfileMenu(null),\n    className: classes.headerMenu,\n    classes: {\n      paper: classes.profileMenu\n    },\n    disableAutoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    weight: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, \"John Smith\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    component: \"a\",\n    color: \"primary\",\n    href: \"https://flatlogic.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"Flalogic.com\")), /*#__PURE__*/React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }), \" Profile\"), /*#__PURE__*/React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }), \" Tasks\"), /*#__PURE__*/React.createElement(MenuItem, {\n    className: classNames(classes.profileMenuItem, classes.headerMenuItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountIcon, {\n    className: classes.profileMenuIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }), \" Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileMenuUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.profileMenuLink,\n    color: \"primary\",\n    onClick: () => signOut(userDispatch, props.history),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, \"Sign Out\")))));\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/components/Header/Header.js"],"names":["React","useState","AppBar","Toolbar","IconButton","InputBase","Menu","MenuItem","Fab","Link","MenuIcon","MailOutline","MailIcon","NotificationsNone","NotificationsIcon","Person","AccountIcon","Search","SearchIcon","Send","SendIcon","ArrowBack","ArrowBackIcon","classNames","useStyles","Badge","Typography","Button","Notification","UserAvatar","useLayoutState","useLayoutDispatch","toggleSidebar","useUserDispatch","signOut","messages","id","variant","name","message","time","Header","props","classes","layoutState","layoutDispatch","userDispatch","mailMenu","setMailMenu","isMailsUnread","setIsMailsUnread","profileMenu","setProfileMenu","isSearchOpen","setSearchOpen","appBar","toolbar","headerMenuButton","headerMenuButtonCollapse","isSidebarOpened","root","headerIcon","headerIconCollapse","logotype","grow","marginRight","search","searchFocused","searchIcon","searchIconOpened","inputRoot","input","inputInput","e","setNotificationsMenu","currentTarget","setIsNotificationsUnread","isNotificationsUnread","notifications","length","Boolean","className","headerMenuList","headerMenu","paper","profileMenuUser","profileMenuLink","map","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","sendButtonIcon","notificationsMenu","notification","headerMenuItem","profileMenuItem","profileMenuIcon","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,GAPF,EAQEC,IARF,QASO,mBATP;AAUA,SACEH,IAAI,IAAII,QADV,EAEEC,WAAW,IAAIC,QAFjB,EAGEC,iBAAiB,IAAIC,iBAHvB,EAIEC,MAAM,IAAIC,WAJZ,EAKEC,MAAM,IAAIC,UALZ,EAMEC,IAAI,IAAIC,QANV,EAOEC,SAAS,IAAIC,aAPf,QAQO,oBARP;AASA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,sBAA1C;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,aAHF,QAIO,6BAJP;AAKA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,2BAAzC;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,SAFX;AAGEC,EAAAA,IAAI,EAAE,UAHR;AAIEC,EAAAA,OAAO,EAAE,uBAJX;AAKEC,EAAAA,IAAI,EAAE;AALR,CADe,EAQf;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,SAFX;AAGEC,EAAAA,IAAI,EAAE,aAHR;AAIEC,EAAAA,OAAO,EAAE,4BAJX;AAKEC,EAAAA,IAAI,EAAE;AALR,CARe,EAef;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,SAFX;AAGEC,EAAAA,IAAI,EAAE,eAHR;AAIEC,EAAAA,OAAO,EAAE,kCAJX;AAKEC,EAAAA,IAAI,EAAE;AALR,CAfe,EAsBf;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,WAFX;AAGEC,EAAAA,IAAI,EAAE,aAHR;AAIEC,EAAAA,OAAO,EAAE,gCAJX;AAKEC,EAAAA,IAAI,EAAE;AALR,CAtBe,CAAjB;AA8BA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,MAAIC,OAAO,GAAGnB,SAAS,EAAvB,CADoC,CAGpC;;AACA,MAAIoB,WAAW,GAAGd,cAAc,EAAhC;AACA,MAAIe,cAAc,GAAGd,iBAAiB,EAAtC;AACA,MAAIe,YAAY,GAAGb,eAAe,EAAlC,CANoC,CAQpC;;AACA,MAAI,CAACc,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI,CAACgD,aAAD,EAAgBC,gBAAhB,IAAoCjD,QAAQ,CAAC,IAAD,CAAhD,CAVoC,CAWpC;AACA;;AACA,MAAI,CAACkD,WAAD,EAAcC,cAAd,IAAgCnD,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAI,CAACoD,YAAD,EAAeC,aAAf,IAAgCrD,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAE0C,OAAO,CAACY,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEZ,OAAO,CAACa,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAE,MAAMxB,aAAa,CAACa,cAAD,CAF9B;AAGE,IAAA,SAAS,EAAEtB,UAAU,CACnBoB,OAAO,CAACc,gBADW,EAEnBd,OAAO,CAACe,wBAFW,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGd,WAAW,CAACe,eAAZ,gBACC,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAErC,UAAU,CACdoB,OAAO,CAACkB,UADM,EAEdlB,OAAO,CAACmB,kBAFM;AADT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAUC,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE;AACPF,MAAAA,IAAI,EAAErC,UAAU,CACdoB,OAAO,CAACkB,UADM,EAEdlB,OAAO,CAACmB,kBAFM;AADT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CADF,eA6BE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAyC,IAAA,SAAS,EAAEnB,OAAO,CAACoB,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA7BF,eAgCE;AAAK,IAAA,SAAS,EAAEpB,OAAO,CAACqB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,eAiCE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEvD,IAAnB;AAAyB,IAAA,IAAI,EAAC,2DAA9B;AAA0F,IAAA,OAAO,EAAE,UAAnG;AAA+G,IAAA,KAAK,EAAE,WAAtH;AAAmI,IAAA,KAAK,EAAE;AAACwD,MAAAA,WAAW,EAAE;AAAd,KAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAjCF,eAkCE;AACE,IAAA,SAAS,EAAE1C,UAAU,CAACoB,OAAO,CAACuB,MAAT,EAAiB;AACpC,OAACvB,OAAO,CAACwB,aAAT,GAAyBd;AADW,KAAjB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,SAAS,EAAE9B,UAAU,CAACoB,OAAO,CAACyB,UAAT,EAAqB;AACxC,OAACzB,OAAO,CAAC0B,gBAAT,GAA4BhB;AADY,KAArB,CADvB;AAIE,IAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,YAAF,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAEO,MAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,eAaE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,OAAO,EAAE;AACPD,MAAAA,IAAI,EAAEjB,OAAO,CAAC2B,SADP;AAEPC,MAAAA,KAAK,EAAE5B,OAAO,CAAC6B;AAFR,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAlCF,eAuDE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,qBAAc,MAFhB;AAGE,qBAAc,WAHhB;AAIE,IAAA,OAAO,EAAEC,CAAC,IAAI;AACZC,MAAAA,oBAAoB,CAACD,CAAC,CAACE,aAAH,CAApB;AACAC,MAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD,KAPH;AAQE,IAAA,SAAS,EAAEjC,OAAO,CAACc,gBARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAEoB,qBAAqB,GAAGC,aAAa,CAACC,MAAjB,GAA0B,IAD/D;AAEE,IAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAE;AAAEnB,MAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAVF,CAvDF,eAwEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,qBAAc,MAFhB;AAGE,qBAAc,WAHhB;AAIE,IAAA,OAAO,EAAEY,CAAC,IAAI;AACZzB,MAAAA,WAAW,CAACyB,CAAC,CAACE,aAAH,CAAX;AACAzB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KAPH;AAQE,IAAA,SAAS,EAAEP,OAAO,CAACc,gBARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAER,aAAa,GAAGd,QAAQ,CAAC4C,MAAZ,GAAqB,IADlD;AAEE,IAAA,KAAK,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAEnB,MAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAVF,CAxEF,eAyFE,oBAAC,UAAD;AACE,qBAAc,MADhB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,EAAElB,OAAO,CAACc,gBAHrB;AAIE,qBAAc,cAJhB;AAKE,IAAA,OAAO,EAAEgB,CAAC,IAAIrB,cAAc,CAACqB,CAAC,CAACE,aAAH,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAEf,MAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAzFF,eAkGE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAEmB,OAAO,CAACjC,QAAD,CAFf;AAGE,IAAA,QAAQ,EAAEA,QAHZ;AAIE,IAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD,CAJ5B;AAKE,IAAA,aAAa,EAAE;AAAEiC,MAAAA,SAAS,EAAEtC,OAAO,CAACuC;AAArB,KALjB;AAME,IAAA,SAAS,EAAEvC,OAAO,CAACwC,UANrB;AAOE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAEzC,OAAO,CAACQ;AAAjB,KAPX;AAQE,IAAA,oBAAoB,MARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAK,IAAA,SAAS,EAAER,OAAO,CAAC0C,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAE1C,OAAO,CAAC2C,eADrB;AAEE,IAAA,SAAS,EAAC,GAFZ;AAGE,IAAA,KAAK,EAAC,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGnD,QAAQ,CAAC4C,MALZ,kBAJF,CAVF,EAsBG5C,QAAQ,CAACoD,GAAT,CAAahD,OAAO,iBACnB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACH,EAAvB;AAA2B,IAAA,SAAS,EAAEO,OAAO,CAAC6C,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE7C,OAAO,CAAC8C,uBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAElD,OAAO,CAACF,OAA3B;AAAoC,IAAA,IAAI,EAAEE,OAAO,CAACD,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAmC,IAAA,eAAe,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,IADX,CAFF,CADF,eAOE;AACE,IAAA,SAAS,EAAEjB,UAAU,CACnBoB,OAAO,CAAC8C,uBADW,EAEnB9C,OAAO,CAAC+C,2BAFW,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,QAAnB;AAA4B,IAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnD,OAAO,CAACD,IADX,CANF,eASE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,eAAe,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACA,OADX,CATF,CAPF,CADD,CAtBH,eA6CE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,kBAAW,KAHb;AAIE,IAAA,SAAS,EAAEI,OAAO,CAACgD,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAOE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEhD,OAAO,CAACiD,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA7CF,CAlGF,eAyJE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,oBADL;AAEE,IAAA,IAAI,EAAEZ,OAAO,CAACa,iBAAD,CAFf;AAGE,IAAA,QAAQ,EAAEA,iBAHZ;AAIE,IAAA,OAAO,EAAE,MAAMnB,oBAAoB,CAAC,IAAD,CAJrC;AAKE,IAAA,SAAS,EAAE/B,OAAO,CAACwC,UALrB;AAME,IAAA,oBAAoB,MANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGL,aAAa,CAACS,GAAd,CAAkBO,YAAY,iBAC7B,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,YAAY,CAAC1D,EADpB;AAEE,IAAA,OAAO,EAAE,MAAMsC,oBAAoB,CAAC,IAAD,CAFrC;AAGE,IAAA,SAAS,EAAE/B,OAAO,CAACoD,cAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,YAAD,oBAAkBD,YAAlB;AAAgC,IAAA,iBAAiB,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,CADD,CARH,CAzJF,eA2KE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,IAAI,EAAEd,OAAO,CAAC7B,WAAD,CAFf;AAGE,IAAA,QAAQ,EAAEA,WAHZ;AAIE,IAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,IAAD,CAJ/B;AAKE,IAAA,SAAS,EAAET,OAAO,CAACwC,UALrB;AAME,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAEzC,OAAO,CAACQ;AAAjB,KANX;AAOE,IAAA,oBAAoB,MAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAER,OAAO,CAAC0C,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAE1C,OAAO,CAAC2C,eADrB;AAEE,IAAA,SAAS,EAAC,GAFZ;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,IAAI,EAAC,uBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CATF,eAsBE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAE/D,UAAU,CACnBoB,OAAO,CAACqD,eADW,EAEnBrD,OAAO,CAACoD,cAFW,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEpD,OAAO,CAACsD,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,aAtBF,eA8BE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAE1E,UAAU,CACnBoB,OAAO,CAACqD,eADW,EAEnBrD,OAAO,CAACoD,cAFW,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEpD,OAAO,CAACsD,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,WA9BF,eAsCE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAE1E,UAAU,CACnBoB,OAAO,CAACqD,eADW,EAEnBrD,OAAO,CAACoD,cAFW,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEpD,OAAO,CAACsD,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,cAtCF,eA8CE;AAAK,IAAA,SAAS,EAAEtD,OAAO,CAAC0C,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAE1C,OAAO,CAAC2C,eADrB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAMpD,OAAO,CAACY,YAAD,EAAeJ,KAAK,CAACwD,OAArB,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA9CF,CA3KF,CADF,CADF;AAwOD","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n/** \nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];**/\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  // var [notificationsMenu, setNotificationsMenu] = useState(null);\n  // var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          React Material Admin\n        </Typography>\n        <div className={classes.grow} />\n        <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} style={{marginRight: 24}}>Unlock full version</Button>\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              John Smith\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://flatlogic.com\"\n            >\n              Flalogic.com\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}