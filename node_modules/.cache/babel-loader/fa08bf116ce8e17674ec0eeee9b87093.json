{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport var styles = function styles(theme) {\n  var light = theme.palette.mode === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.4375em',\n      // 23px\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '4px 0 5px',\n      '&$marginDense': {\n        paddingTop: 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `hiddenLabel={true}`. */\n    hiddenLabel: {},\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: '4px 0 5px',\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.4375em',\n      // Reset 23pxthe native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  var ariaDescribedby = props['aria-describedby'],\n      autoComplete = props.autoComplete,\n      autoFocus = props.autoFocus,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      endAdornment = props.endAdornment,\n      error = props.error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      id = props.id,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$inputProps = props.inputProps,\n      inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps,\n      inputRefProp = props.inputRef,\n      margin = props.margin,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      placeholder = props.placeholder,\n      readOnly = props.readOnly,\n      renderSuffix = props.renderSuffix,\n      rows = props.rows,\n      startAdornment = props.startAdornment,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"startAdornment\", \"type\", \"value\"]);\n\n  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef();\n  var handleInputRefWarning = React.useCallback(function (instance) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  var handleInputRef = useForkRef(inputRef, handleInputRefProp);\n\n  var _React$useState = React.useState(false),\n      focused = _React$useState[0],\n      setFocused = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(function () {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  var onFilled = muiFormControl && muiFormControl.onFilled;\n  var onEmpty = muiFormControl && muiFormControl.onEmpty;\n  var checkDirty = React.useCallback(function (obj) {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(function () {\n    if (isControlled) {\n      checkDirty({\n        value: value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  var handleFocus = function handleFocus(event) {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      var element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.\" : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange.apply(void 0, [event].concat(args));\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(function () {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleClick = function handleClick(event) {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var InputComponent = inputComponent;\n\n  var inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type: type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows) {\n      InputComponent = 'textarea';\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (minRows || maxRows) {\n          console.warn('Material-UI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n    } else {\n      inputProps = _extends({\n        maxRows: maxRows,\n        minRows: minRows\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type: type\n    }, inputProps);\n  }\n\n  var handleAutoFill = function handleAutoFill(event) {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(function () {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.hiddenLabel && classes.hiddenLabel, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment: startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/node_modules/@material-ui/core/esm/InputBase/InputBase.js"],"names":["_objectWithoutProperties","_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","PropTypes","clsx","refType","formControlState","FormControlContext","useFormControl","withStyles","capitalize","useForkRef","useEnhancedEffect","TextareaAutosize","isFilled","styles","theme","light","palette","mode","placeholder","color","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","root","typography","body1","text","primary","lineHeight","boxSizing","position","cursor","display","alignItems","disabled","formControl","focused","adornedStart","adornedEnd","error","marginDense","multiline","padding","paddingTop","colorSecondary","fullWidth","width","hiddenLabel","input","font","letterSpacing","border","background","height","margin","WebkitTapHighlightColor","minWidth","animationName","animationDuration","outline","boxShadow","inputMarginDense","inputMultiline","resize","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel","InputBase","forwardRef","props","ref","ariaDescribedby","autoComplete","autoFocus","classes","className","defaultValue","endAdornment","_props$fullWidth","id","_props$inputComponent","inputComponent","_props$inputProps","inputProps","inputPropsProp","inputRefProp","inputRef","maxRows","minRows","_props$multiline","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","readOnly","renderSuffix","rows","startAdornment","_props$type","type","valueProp","value","other","_React$useRef","useRef","isControlled","current","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","handleInputPropsRefProp","handleInputRefProp","handleInputRef","_React$useState","useState","setFocused","muiFormControl","useEffect","registerEffect","undefined","fcs","states","onFilled","onEmpty","checkDirty","obj","handleFocus","event","stopPropagation","handleBlur","handleChange","element","target","Error","_len","arguments","length","args","Array","_key","apply","concat","handleClick","currentTarget","InputComponent","warn","handleAutoFill","setAdornedStart","Boolean","createElement","Provider","onAnimationStart","required","propTypes","string","bool","object","oneOf","any","node","elementType","oneOfType","number","func"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport var styles = function styles(theme) {\n  var light = theme.palette.mode === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.4375em',\n      // 23px\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: '4px 0 5px',\n      '&$marginDense': {\n        paddingTop: 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `hiddenLabel={true}`. */\n    hiddenLabel: {},\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: '4px 0 5px',\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.4375em',\n      // Reset 23pxthe native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  var ariaDescribedby = props['aria-describedby'],\n      autoComplete = props.autoComplete,\n      autoFocus = props.autoFocus,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      endAdornment = props.endAdornment,\n      error = props.error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      id = props.id,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$inputProps = props.inputProps,\n      inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps,\n      inputRefProp = props.inputRef,\n      margin = props.margin,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      placeholder = props.placeholder,\n      readOnly = props.readOnly,\n      renderSuffix = props.renderSuffix,\n      rows = props.rows,\n      startAdornment = props.startAdornment,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"startAdornment\", \"type\", \"value\"]);\n\n  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef();\n  var handleInputRefWarning = React.useCallback(function (instance) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  var handleInputRef = useForkRef(inputRef, handleInputRefProp);\n\n  var _React$useState = React.useState(false),\n      focused = _React$useState[0],\n      setFocused = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(function () {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  var onFilled = muiFormControl && muiFormControl.onFilled;\n  var onEmpty = muiFormControl && muiFormControl.onEmpty;\n  var checkDirty = React.useCallback(function (obj) {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(function () {\n    if (isControlled) {\n      checkDirty({\n        value: value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  var handleFocus = function handleFocus(event) {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      var element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.\" : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange.apply(void 0, [event].concat(args));\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(function () {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleClick = function handleClick(event) {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var InputComponent = inputComponent;\n\n  var inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type: type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows) {\n      InputComponent = 'textarea';\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (minRows || maxRows) {\n          console.warn('Material-UI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n    } else {\n      inputProps = _extends({\n        maxRows: maxRows,\n        minRows: minRows\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type: type\n    }, inputProps);\n  }\n\n  var handleAutoFill = function handleAutoFill(event) {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(function () {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.hiddenLabel && classes.hiddenLabel, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment: startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);"]},"metadata":{},"sourceType":"module"}