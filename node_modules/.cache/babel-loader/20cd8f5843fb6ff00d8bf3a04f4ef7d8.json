{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Dashboard/components/BigStat/BigStat.js\";\nimport React, { useState } from \"react\";\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport Widget from \"../../../../components/Widget\";\nimport { Typography } from \"../../../../components/Wrappers\";\nexport default function BigStat(props) {\n  var {\n    product,\n    total,\n    color,\n    registrations,\n    bounce\n  } = props;\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var [value, setValue] = useState(\"daily\");\n  return /*#__PURE__*/React.createElement(Widget, {\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, product), /*#__PURE__*/React.createElement(Select, {\n      value: value,\n      onChange: e => setValue(e.target.value),\n      input: /*#__PURE__*/React.createElement(Input, {\n        disableUnderline: true,\n        classes: {\n          input: classes.selectInput\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }),\n      className: classes.select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"daily\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Daily\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"weekly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Weekly\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"monthly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Monthly\"))),\n    upperTitle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.totalValueContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.totalValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    size: \"xxl\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, total[value]), /*#__PURE__*/React.createElement(Typography, {\n    color: total.percent.profit ? \"success\" : \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"\\xA0\", total.percent.profit ? \"+\" : \"-\", total.percent.value, \"%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomStatsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames(classes.statCell, classes.borderRight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, registrations[value].value), /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    className: classnames(classes.profitArrow, {\n      [!registrations[value].profit]: classes.profitArrowDanger\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Registrations\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.statCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, bounce[value].value, \"%\"), /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    className: classnames(classes.profitArrow, {\n      [!registrations[value].profit]: classes.profitArrowDanger\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Bounce Rate\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames(classes.statCell, classes.borderRight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, registrations[value].value * 10), /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    className: classnames(classes.profitArrow, {\n      [classes.profitArrowDanger]: !registrations[value].profit\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Views\"))));\n} // #######################################################################\n\nfunction getRandomData() {\n  return Array(7).fill().map(() => ({\n    value: Math.floor(Math.random() * 10) + 1\n  }));\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/pages/Dashboard/components/BigStat/BigStat.js"],"names":["React","useState","Grid","Select","MenuItem","Input","ArrowForward","ArrowForwardIcon","useTheme","classnames","useStyles","Widget","Typography","BigStat","props","product","total","color","registrations","bounce","classes","theme","value","setValue","title","e","target","input","selectInput","select","totalValueContainer","totalValue","percent","profit","bottomStatsContainer","statCell","borderRight","profitArrow","profitArrowDanger","getRandomData","Array","fill","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../../components/Widget\";\nimport { Typography } from \"../../../../components/Wrappers\";\n\nexport default function BigStat(props) {\n  var { product, total, color, registrations, bounce } = props;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [value, setValue] = useState(\"daily\");\n\n  return (\n    <Widget\n      header={\n        <div className={classes.title}>\n          <Typography variant=\"h5\">{product}</Typography>\n\n          <Select\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            input={\n              <Input\n                disableUnderline\n                classes={{ input: classes.selectInput }}\n              />\n            }\n            className={classes.select}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n          </Select>\n        </div>\n      }\n      upperTitle\n    >\n      <div className={classes.totalValueContainer}>\n        <div className={classes.totalValue}>\n          <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">\n            {total[value]}\n          </Typography>\n          <Typography color={total.percent.profit ? \"success\" : \"secondary\"}>\n            &nbsp;{total.percent.profit ? \"+\" : \"-\"}\n            {total.percent.value}%\n          </Typography>\n        </div>\n      </div>\n      <div className={classes.bottomStatsContainer}>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Registrations\n          </Typography>\n        </div>\n        <div className={classes.statCell}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{bounce[value].value}%</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Bounce Rate\n          </Typography>\n        </div>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">\n              {registrations[value].value * 10}\n            </Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [classes.profitArrowDanger]: !registrations[value].profit,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Views\n          </Typography>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\n// #######################################################################\n\nfunction getRandomData() {\n  return Array(7)\n    .fill()\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\n}\n"]},"metadata":{},"sourceType":"module"}