{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front/src/components/App.js\";\nimport React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\"; // components\n\nimport Layout from \"./Layout\"; // pages\n\nimport Error from \"../pages/error/Error\";\nimport Login from \"../pages/Login/login\"; // context\n\nimport { useUserState } from \"../context/UserContext\";\nimport Registry from \"../pages/Registry/registry\";\nexport default function App() {\n  // global\n  var {\n    isAuthenticated\n  } = useUserState();\n  return /*#__PURE__*/React.createElement(HashRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/app\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/app\",\n    component: Layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PublicRoute, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PublicRoute, {\n    path: \"/\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/registry\",\n    component: Registry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }))); // #######################################################################\n\n  function PrivateRoute({\n    component,\n    ...rest\n  }) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuthenticated ? React.createElement(component, props) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/app/dashboard\",\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  function PublicRoute({\n    component,\n    ...rest\n  }) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }) : React.createElement(component, props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/src/components/App.js"],"names":["React","HashRouter","Route","Switch","Redirect","Layout","Error","Login","useUserState","Registry","App","isAuthenticated","PrivateRoute","component","rest","props","createElement","pathname","state","from","location","PublicRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,kBAApD,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B;AACA,MAAI;AAAEC,IAAAA;AAAF,MAAsBH,YAAY,EAAtC;AAEA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEH,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,CAJ4B,CAqB5B;;AAEA,WAASM,YAAT,CAAsB;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAtB,EAA8C;AAC5C,wBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAEC,KAAK,IACXJ,eAAe,GACbX,KAAK,CAACgB,aAAN,CAAoBH,SAApB,EAA+BE,KAA/B,CADa,gBAGb,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFE,UAAAA,QAAQ,EAAE,gBADR;AAEFC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AADP;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAmBD;;AAED,WAASC,WAAT,CAAqB;AAAER,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAArB,EAA6C;AAC3C,wBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAEC,KAAK,IACXJ,eAAe,gBACb,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFM,UAAAA,QAAQ,EAAE;AADR,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa,GAObjB,KAAK,CAACgB,aAAN,CAAoBH,SAApB,EAA+BE,KAA/B,CAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAgBD;AACF","sourcesContent":["import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// components\nimport Layout from \"./Layout\";\n\n// pages\nimport Error from \"../pages/error/Error\";\nimport Login from \"../pages/Login/login\";\n\n// context\nimport { useUserState } from \"../context/UserContext\";\nimport Registry from \"../pages/Registry/registry\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated } = useUserState();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route\n          exact\n          path=\"/app\"\n          render={() => <Redirect to=\"/app/dashboard\" />}\n        />\n        <PrivateRoute path=\"/app\" component={Layout} />\n        <PublicRoute path=\"/login\" component={Login} />\n        <PublicRoute path=\"/\" component={Login} />\n        <Route exact path=\"/registry\" component={Registry}/>\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/app/dashboard\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}