{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { deepmerge } from '@material-ui/utils';\nimport propsToClassKey from '../propsToClassKey';\nimport noopTheme from './noopTheme';\nexport default function getStylesCreator(stylesOrCreator) {\n  var themingEnabled = typeof stylesOrCreator === 'function';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (_typeof(stylesOrCreator) !== 'object' && !themingEnabled) {\n      console.error(['Material-UI: The `styles` argument provided is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\\n'));\n    }\n  }\n\n  return {\n    create: function create(theme, name) {\n      var styles;\n\n      try {\n        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (themingEnabled === true && theme === noopTheme) {\n            // TODO: prepend error message/name instead\n            console.error(['Material-UI: The `styles` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n          }\n        }\n\n        throw err;\n      }\n\n      if (!name || !theme.components || !theme.components[name] || !theme.components[name].styleOverrides && !theme.components[name].variants) {\n        return styles;\n      }\n\n      var overrides = theme.components[name].styleOverrides || {};\n      var variants = theme.components[name].variants || [];\n\n      var stylesWithOverrides = _extends({}, styles);\n\n      Object.keys(overrides).forEach(function (key) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!stylesWithOverrides[key]) {\n            console.warn(['Material-UI: You are trying to override a style that does not exist.', \"Fix the `\".concat(key, \"` key of `theme.overrides.\").concat(name, \"`.\"), '', \"If you intentionally wanted to add a new key, please use the theme.components[\".concat(name, \"].variants option.\")].join('\\n'));\n          }\n        }\n\n        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key] || {}, overrides[key]);\n      });\n      variants.forEach(function (definition) {\n        var classKey = propsToClassKey(definition.props);\n        stylesWithOverrides[classKey] = deepmerge(stylesWithOverrides[classKey] || {}, definition.style);\n      });\n      return stylesWithOverrides;\n    },\n    options: {}\n  };\n}","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js"],"names":["_extends","_typeof","deepmerge","propsToClassKey","noopTheme","getStylesCreator","stylesOrCreator","themingEnabled","process","env","NODE_ENV","console","error","join","create","theme","name","styles","err","components","styleOverrides","variants","overrides","stylesWithOverrides","Object","keys","forEach","key","warn","concat","definition","classKey","props","style","options"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,eAAe,SAASC,gBAAT,CAA0BC,eAA1B,EAA2C;AACxD,MAAIC,cAAc,GAAG,OAAOD,eAAP,KAA2B,UAAhD;;AAEA,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAIT,OAAO,CAACK,eAAD,CAAP,KAA6B,QAA7B,IAAyC,CAACC,cAA9C,EAA8D;AAC5DI,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,yDAAD,EAA4D,0EAA5D,EAAwIC,IAAxI,CAA6I,IAA7I,CAAd;AACD;AACF;;AAED,SAAO;AACLC,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6B;AACnC,UAAIC,MAAJ;;AAEA,UAAI;AACFA,QAAAA,MAAM,GAAGV,cAAc,GAAGD,eAAe,CAACS,KAAD,CAAlB,GAA4BT,eAAnD;AACD,OAFD,CAEE,OAAOY,GAAP,EAAY;AACZ,YAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,cAAIH,cAAc,KAAK,IAAnB,IAA2BQ,KAAK,KAAKX,SAAzC,EAAoD;AAClD;AACAO,YAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,yDAAD,EAA4D,8DAA5D,EAA4H,0DAA5H,EAAwLC,IAAxL,CAA6L,IAA7L,CAAd;AACD;AACF;;AAED,cAAMK,GAAN;AACD;;AAED,UAAI,CAACF,IAAD,IAAS,CAACD,KAAK,CAACI,UAAhB,IAA8B,CAACJ,KAAK,CAACI,UAAN,CAAiBH,IAAjB,CAA/B,IAAyD,CAACD,KAAK,CAACI,UAAN,CAAiBH,IAAjB,EAAuBI,cAAxB,IAA0C,CAACL,KAAK,CAACI,UAAN,CAAiBH,IAAjB,EAAuBK,QAA/H,EAAyI;AACvI,eAAOJ,MAAP;AACD;;AAED,UAAIK,SAAS,GAAGP,KAAK,CAACI,UAAN,CAAiBH,IAAjB,EAAuBI,cAAvB,IAAyC,EAAzD;AACA,UAAIC,QAAQ,GAAGN,KAAK,CAACI,UAAN,CAAiBH,IAAjB,EAAuBK,QAAvB,IAAmC,EAAlD;;AAEA,UAAIE,mBAAmB,GAAGvB,QAAQ,CAAC,EAAD,EAAKiB,MAAL,CAAlC;;AAEAO,MAAAA,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,OAAvB,CAA+B,UAAUC,GAAV,EAAe;AAC5C,YAAInB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,cAAI,CAACa,mBAAmB,CAACI,GAAD,CAAxB,EAA+B;AAC7BhB,YAAAA,OAAO,CAACiB,IAAR,CAAa,CAAC,sEAAD,EAAyE,YAAYC,MAAZ,CAAmBF,GAAnB,EAAwB,4BAAxB,EAAsDE,MAAtD,CAA6Db,IAA7D,EAAmE,IAAnE,CAAzE,EAAmJ,EAAnJ,EAAuJ,iFAAiFa,MAAjF,CAAwFb,IAAxF,EAA8F,oBAA9F,CAAvJ,EAA4QH,IAA5Q,CAAiR,IAAjR,CAAb;AACD;AACF;;AAEDU,QAAAA,mBAAmB,CAACI,GAAD,CAAnB,GAA2BzB,SAAS,CAACqB,mBAAmB,CAACI,GAAD,CAAnB,IAA4B,EAA7B,EAAiCL,SAAS,CAACK,GAAD,CAA1C,CAApC;AACD,OARD;AASAN,MAAAA,QAAQ,CAACK,OAAT,CAAiB,UAAUI,UAAV,EAAsB;AACrC,YAAIC,QAAQ,GAAG5B,eAAe,CAAC2B,UAAU,CAACE,KAAZ,CAA9B;AACAT,QAAAA,mBAAmB,CAACQ,QAAD,CAAnB,GAAgC7B,SAAS,CAACqB,mBAAmB,CAACQ,QAAD,CAAnB,IAAiC,EAAlC,EAAsCD,UAAU,CAACG,KAAjD,CAAzC;AACD,OAHD;AAIA,aAAOV,mBAAP;AACD,KAxCI;AAyCLW,IAAAA,OAAO,EAAE;AAzCJ,GAAP;AA2CD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { deepmerge } from '@material-ui/utils';\nimport propsToClassKey from '../propsToClassKey';\nimport noopTheme from './noopTheme';\nexport default function getStylesCreator(stylesOrCreator) {\n  var themingEnabled = typeof stylesOrCreator === 'function';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (_typeof(stylesOrCreator) !== 'object' && !themingEnabled) {\n      console.error(['Material-UI: The `styles` argument provided is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\\n'));\n    }\n  }\n\n  return {\n    create: function create(theme, name) {\n      var styles;\n\n      try {\n        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (themingEnabled === true && theme === noopTheme) {\n            // TODO: prepend error message/name instead\n            console.error(['Material-UI: The `styles` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n          }\n        }\n\n        throw err;\n      }\n\n      if (!name || !theme.components || !theme.components[name] || !theme.components[name].styleOverrides && !theme.components[name].variants) {\n        return styles;\n      }\n\n      var overrides = theme.components[name].styleOverrides || {};\n      var variants = theme.components[name].variants || [];\n\n      var stylesWithOverrides = _extends({}, styles);\n\n      Object.keys(overrides).forEach(function (key) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!stylesWithOverrides[key]) {\n            console.warn(['Material-UI: You are trying to override a style that does not exist.', \"Fix the `\".concat(key, \"` key of `theme.overrides.\").concat(name, \"`.\"), '', \"If you intentionally wanted to add a new key, please use the theme.components[\".concat(name, \"].variants option.\")].join('\\n'));\n          }\n        }\n\n        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key] || {}, overrides[key]);\n      });\n      variants.forEach(function (definition) {\n        var classKey = propsToClassKey(definition.props);\n        stylesWithOverrides[classKey] = deepmerge(stylesWithOverrides[classKey] || {}, definition.style);\n      });\n      return stylesWithOverrides;\n    },\n    options: {}\n  };\n}"]},"metadata":{},"sourceType":"module"}