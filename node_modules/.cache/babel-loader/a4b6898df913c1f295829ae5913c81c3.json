{"ast":null,"code":"/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\nfunction kotlin(hljs) {\n  var KEYWORDS = {\n    keyword: 'abstract as val var vararg get set class object open private protected public noinline ' + 'crossinline dynamic final enum if else do while for when throw try catch finally ' + 'import package is in fun override companion reified inline lateinit init ' + 'interface annotation data sealed internal infix operator out by constructor super ' + 'tailrec where const inner suspend typealias external expect actual',\n    built_in: 'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal: 'true false null'\n  };\n  var KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [{\n        className: 'symbol',\n        begin: /@\\w+/\n      }]\n    }\n  };\n  var LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  }; // for string templates\n\n  var SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [hljs.C_NUMBER_MODE]\n  };\n  var VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  var STRING = {\n    className: 'string',\n    variants: [{\n      begin: '\"\"\"',\n      end: '\"\"\"(?=[^\"])',\n      contains: [VARIABLE, SUBST]\n    }, // Can't use built-in modes easily, as we want to use STRING in the meta\n    // context as 'meta-string' and there's no syntax to remove explicitly set\n    // classNames in built-in modes.\n    {\n      begin: '\\'',\n      end: '\\'',\n      illegal: /\\n/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"',\n      illegal: /\\n/,\n      contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]\n    }]\n  };\n  SUBST.contains.push(STRING);\n  var ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [hljs.inherit(STRING, {\n        className: 'meta-string'\n      })]\n    }]\n  }; // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n\n  var KOTLIN_NUMBER_RE = '\\\\b' + '(' + '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n  '|' + '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n  '|' + '(' + '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' + '|' + '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' + ')' + '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n  ')' + '[lLfF]?';\n  var KOTLIN_NUMBER_MODE = {\n    className: 'number',\n    begin: KOTLIN_NUMBER_RE,\n    relevance: 0\n  };\n  var KOTLIN_NESTED_COMMENT = hljs.COMMENT('/\\\\*', '\\\\*/', {\n    contains: [hljs.C_BLOCK_COMMENT_MODE]\n  });\n  var KOTLIN_PAREN_TYPE = {\n    variants: [{\n      className: 'type',\n      begin: hljs.UNDERSCORE_IDENT_RE\n    }, {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [] // defined later\n\n    }]\n  };\n  var KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [KOTLIN_PAREN_TYPE];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [KOTLIN_PAREN_TYPE2];\n  return {\n    name: 'Kotlin',\n    aliases: ['kt'],\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n      relevance: 0,\n      contains: [{\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }]\n    }), hljs.C_LINE_COMMENT_MODE, KOTLIN_NESTED_COMMENT, KEYWORDS_WITH_LABEL, LABEL, ANNOTATION_USE_SITE, ANNOTATION, {\n      className: 'function',\n      beginKeywords: 'fun',\n      end: '[(]|$',\n      returnBegin: true,\n      excludeEnd: true,\n      keywords: KEYWORDS,\n      illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n      relevance: 5,\n      contains: [{\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n        returnBegin: true,\n        relevance: 0,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }, {\n        className: 'type',\n        begin: /</,\n        end: />/,\n        keywords: 'reified',\n        relevance: 0\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        endsParent: true,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [{\n          begin: /:/,\n          end: /[=,\\/]/,\n          endsWithParent: true,\n          contains: [KOTLIN_PAREN_TYPE, hljs.C_LINE_COMMENT_MODE, KOTLIN_NESTED_COMMENT],\n          relevance: 0\n        }, hljs.C_LINE_COMMENT_MODE, KOTLIN_NESTED_COMMENT, ANNOTATION_USE_SITE, ANNOTATION, STRING, hljs.C_NUMBER_MODE]\n      }, KOTLIN_NESTED_COMMENT]\n    }, {\n      className: 'class',\n      beginKeywords: 'class interface trait',\n      // remove 'trait' when removed from KEYWORDS\n      end: /[:\\{(]|$/,\n      excludeEnd: true,\n      illegal: 'extends implements',\n      contains: [{\n        beginKeywords: 'public protected internal private constructor'\n      }, hljs.UNDERSCORE_TITLE_MODE, {\n        className: 'type',\n        begin: /</,\n        end: />/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }, {\n        className: 'type',\n        begin: /[,:]\\s*/,\n        end: /[<\\(,]|$/,\n        excludeBegin: true,\n        returnEnd: true\n      }, ANNOTATION_USE_SITE, ANNOTATION]\n    }, STRING, {\n      className: 'meta',\n      begin: \"^#!/usr/bin/env\",\n      end: '$',\n      illegal: '\\n'\n    }, KOTLIN_NUMBER_MODE]\n  };\n}\n\nmodule.exports = kotlin;","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/node_modules/highlight.js/lib/languages/kotlin.js"],"names":["kotlin","hljs","KEYWORDS","keyword","built_in","literal","KEYWORDS_WITH_LABEL","className","begin","starts","contains","LABEL","UNDERSCORE_IDENT_RE","SUBST","end","C_NUMBER_MODE","VARIABLE","STRING","variants","illegal","BACKSLASH_ESCAPE","push","ANNOTATION_USE_SITE","ANNOTATION","inherit","KOTLIN_NUMBER_RE","KOTLIN_NUMBER_MODE","relevance","KOTLIN_NESTED_COMMENT","COMMENT","C_BLOCK_COMMENT_MODE","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","name","aliases","keywords","C_LINE_COMMENT_MODE","beginKeywords","returnBegin","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","endsWithParent","excludeBegin","returnEnd","module","exports"],"mappings":"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","sourcesContent":["/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline ' +\n      'crossinline dynamic final enum if else do while for when throw try catch finally ' +\n      'import package is in fun override companion reified inline lateinit init ' +\n      'interface annotation data sealed internal infix operator out by constructor super ' +\n      'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [\n        {\n          className: 'symbol',\n          begin: /@\\w+/\n        }\n      ]\n    }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, {\n            className: 'meta-string'\n          })\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_RE = '\\\\b' +\n    '(' +\n      '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n      '|' +\n      '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n      '|' +\n      '(' +\n        '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' +\n        '|' +\n        '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' +\n      ')' +\n      '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n    ')' +\n    '[lLfF]?';\n  const KOTLIN_NUMBER_MODE = {\n    className: 'number',\n    begin: KOTLIN_NUMBER_RE,\n    relevance: 0\n  };\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    {\n      contains: [ hljs.C_BLOCK_COMMENT_MODE ]\n    }\n  );\n  const KOTLIN_PAREN_TYPE = {\n    variants: [\n      {\n        className: 'type',\n        begin: hljs.UNDERSCORE_IDENT_RE\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [] // defined later\n      }\n    ]\n  };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [ 'kt' ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait', // remove 'trait' when removed from KEYWORDS\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          {\n            beginKeywords: 'public protected internal private constructor'\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = kotlin;\n"]},"metadata":{},"sourceType":"script"}