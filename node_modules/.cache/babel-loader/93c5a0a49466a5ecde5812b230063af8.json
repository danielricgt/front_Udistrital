{"ast":null,"code":"var _jsxFileName = \"/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/src/pages/Login/login.js\";\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, TextField, Paper } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport useStyles from \"./style\";\nimport { withRouter } from \"react-router-dom\"; //Context\n\nimport { useUserDispatch, navigate, userLogin, userRegistry } from \"../../context/UserContext\";\nimport logo from \"../../assets/images/logo.png\";\n\nfunction Login(props) {\n  var classes = useStyles();\n  var [isLoading, setIsLoading] = useState(false);\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [answer, setAnswer] = useState(null);\n  var [error, setError] = useState(null);\n  const [open, setOpen] = React.useState(true); // global\n\n  var userDispatch = useUserDispatch();\n\n  const makeLogin = () => {\n    userLogin({\n      \"userDispatch\": userDispatch,\n      \"loginValue\": loginValue,\n      \"passwordValue\": passwordValue,\n      \"history\": props.history,\n      \"operation\": \"login\",\n      \"setError\": setError,\n      \"setIsLoading\": setIsLoading,\n      \"setAnswer\": setAnswer,\n      \"step\": 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"elevation\",\n    elevation: 5,\n    className: classes.loginBackground,\n    square: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Gesti\\xF3n de inventarios\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logotypeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.logotypeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        input: classes.textField\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Correo\",\n    label: \"Correo\",\n    type: \"email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Contrase\\xF1a\",\n    label: \"Contrase\\xF1a\",\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: loginValue === \"\" || passwordValue === \"\",\n    onClick: () => userLogin({\n      \"userDispatch\": userDispatch,\n      \"loginValue\": loginValue,\n      \"passwordValue\": passwordValue,\n      \"history\": props.history,\n      \"operation\": \"login\",\n      \"setError\": setError,\n      \"setIsLoading\": setIsLoading,\n      \"setAnswer\": setAnswer,\n      \"step\": 1\n    }),\n    variant: \"contained\",\n    className: classes.loginButtom,\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Iniciar\")))), isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => userRegistry(setIsLoading, props.history),\n    className: classes.registryButtom,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Registrarse\")), answer ? /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      size: \"medium\",\n      onClick: () => {\n        setOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Alg\\xF3 pas\\xF3 verifica los datos\")) : /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })); //}\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front_Udistrital/src/pages/Login/login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","TextField","Paper","Alert","CloseIcon","IconButton","Collapse","useStyles","withRouter","useUserDispatch","navigate","userLogin","userRegistry","logo","Login","props","classes","isLoading","setIsLoading","loginValue","setLoginValue","passwordValue","setPasswordValue","answer","setAnswer","error","setError","open","setOpen","userDispatch","makeLogin","history","container","loginBackground","formContainer","form","title","logotypeContainer","logotypeImage","input","textField","e","target","value","formButtons","loginLoader","loginButtom","registryButtom","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  TextField,\n  Paper,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport useStyles from \"./style\";\nimport { withRouter } from \"react-router-dom\";\n//Context\nimport {\n  useUserDispatch,\n  navigate,\n  userLogin,\n  userRegistry,\n} from \"../../context/UserContext\";\nimport logo from \"../../assets/images/logo.png\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [answer, setAnswer] = useState(null);\n  var [error, setError] = useState(null);\n  const [open, setOpen] = React.useState(true);\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  const makeLogin = () =>{\n    userLogin(                      {\n      \"userDispatch\": userDispatch,\n      \"loginValue\":  loginValue,\n      \"passwordValue\":  passwordValue,\n      \"history\":  props.history,\n      \"operation\": \"login\",\n      \"setError\":  setError,\n      \"setIsLoading\": setIsLoading,\n      \"setAnswer\": setAnswer,\n      \"step\": 1   \n    });\n\n}\n  return (\n    <Grid container className={classes.container}>\n      <Paper\n        variant=\"elevation\"\n        elevation={5}\n        className={classes.loginBackground}\n        square={false}\n      >\n        <div className={classes.formContainer}>\n          <div className={classes.form}>\n            <Typography variant=\"h1\" className={classes.title}>\n              Gestión de inventarios\n            </Typography>\n            <div className={classes.logotypeContainer}>\n              <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n            </div>\n            <TextField\n              id=\"email\"\n              InputProps={{\n                classes: {\n                  input: classes.textField,\n                },\n              }}\n              value={loginValue}\n              onChange={(e) => setLoginValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Correo\"\n              label=\"Correo\"\n              type=\"email\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              InputProps={{\n                classes: {\n                  input: classes.textField,\n                },\n              }}\n              value={passwordValue}\n              onChange={(e) => setPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"Contraseña\"\n              label=\"Contraseña\"\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <div className={classes.formButtons}>\n              {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n              ) : (\n                <Button\n                  disabled={loginValue === \"\" || passwordValue === \"\"}\n                  onClick={() =>\n                    userLogin(\n                      {\n                        \"userDispatch\": userDispatch,\n                        \"loginValue\":  loginValue,\n                        \"passwordValue\":  passwordValue,\n                        \"history\":  props.history,\n                        \"operation\": \"login\",\n                        \"setError\":  setError,\n                        \"setIsLoading\": setIsLoading,\n                        \"setAnswer\": setAnswer,\n                        \"step\": 1   \n                      }\n                    )\n\n                  }\n                  variant=\"contained\"\n                  className={classes.loginButtom}\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  Iniciar\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n        {isLoading ? (\n          <CircularProgress size={26} className={classes.loginLoader} />\n        ) : (\n          <Button\n            onClick={() => userRegistry(setIsLoading, props.history)}\n            className={classes.registryButtom}\n            color=\"primary\"\n          >\n            Registrarse\n          </Button>\n        )}\n      </Paper>\n      {answer ? (\n        <Collapse in={open}>\n          <Alert\n            severity=\"error\"\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"medium\"\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n            }\n          >\n            Algó pasó verifica los datos\n          </Alert>\n        </Collapse>\n      ) : (\n        <Typography\n          color=\"secondary\"\n          className={classes.errorMessage}\n        ></Typography>\n      )}\n    </Grid>\n  );\n  //}\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}