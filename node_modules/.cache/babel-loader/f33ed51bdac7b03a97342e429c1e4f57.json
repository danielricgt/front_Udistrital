{"ast":null,"code":"/*\n Language: G-code (ISO 6983)\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\n Website: https://www.sis.se/api/document/preview/911952/\n */\nfunction gcode(hljs) {\n  var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var GCODE_CLOSE_RE = '%';\n  var GCODE_KEYWORDS = {\n    $pattern: GCODE_IDENT_RE,\n    keyword: 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' + 'EQ LT GT NE GE LE OR XOR'\n  };\n  var GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  var GCODE_CODE = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT(/\\(/, /\\)/), hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE\n  }), hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  }), {\n    className: 'name',\n    begin: '([G])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'name',\n    begin: '([M])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'attr',\n    begin: '(VC|VS|#)',\n    end: '(\\\\d+)'\n  }, {\n    className: 'attr',\n    begin: '(VZOFX|VZOFY|VZOFZ)'\n  }, {\n    className: 'built_in',\n    begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n    end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n  }, {\n    className: 'symbol',\n    variants: [{\n      begin: 'N',\n      end: '\\\\d+',\n      illegal: '\\\\W'\n    }]\n  }];\n  return {\n    name: 'G-code (ISO 6983)',\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    keywords: GCODE_KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: GCODE_CLOSE_RE\n    }, GCODE_START].concat(GCODE_CODE)\n  };\n}\n\nmodule.exports = gcode;","map":{"version":3,"sources":["/Users/charlyagudelo/Documents/proyDanny/front/node_modules/highlight.js/lib/languages/gcode.js"],"names":["gcode","hljs","GCODE_IDENT_RE","GCODE_CLOSE_RE","GCODE_KEYWORDS","$pattern","keyword","GCODE_START","className","begin","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","inherit","C_NUMBER_MODE","C_NUMBER_RE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants","name","aliases","case_insensitive","keywords","contains","concat","module","exports"],"mappings":"AAAA;;;;;;AAOA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACnB,MAAMC,cAAc,GAAG,mBAAvB;AACA,MAAMC,cAAc,GAAG,GAAvB;AACA,MAAMC,cAAc,GAAG;AACrBC,IAAAA,QAAQ,EAAEH,cADW;AAErBI,IAAAA,OAAO,EAAE,sEACP;AAHmB,GAAvB;AAKA,MAAMC,WAAW,GAAG;AAClBC,IAAAA,SAAS,EAAE,MADO;AAElBC,IAAAA,KAAK,EAAE;AAFW,GAApB;AAIA,MAAMC,UAAU,GAAG,CACjBT,IAAI,CAACU,mBADY,EAEjBV,IAAI,CAACW,oBAFY,EAGjBX,IAAI,CAACY,OAAL,CAAa,IAAb,EAAmB,IAAnB,CAHiB,EAIjBZ,IAAI,CAACa,OAAL,CAAab,IAAI,CAACc,aAAlB,EAAiC;AAC/BN,IAAAA,KAAK,EAAE,mCAAmCR,IAAI,CAACe;AADhB,GAAjC,CAJiB,EAOjBf,IAAI,CAACa,OAAL,CAAab,IAAI,CAACgB,gBAAlB,EAAoC;AAClCC,IAAAA,OAAO,EAAE;AADyB,GAApC,CAPiB,EAUjBjB,IAAI,CAACa,OAAL,CAAab,IAAI,CAACkB,iBAAlB,EAAqC;AACnCD,IAAAA,OAAO,EAAE;AAD0B,GAArC,CAViB,EAajB;AACEV,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbiB,EAiBjB;AACED,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAjBiB,EAqBjB;AACED,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEW,IAAAA,GAAG,EAAE;AAHP,GArBiB,EA0BjB;AACEZ,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,KAAK,EAAE;AAFT,GA1BiB,EA8BjB;AACED,IAAAA,SAAS,EAAE,UADb;AAEEC,IAAAA,KAAK,EAAE,4DAFT;AAGEW,IAAAA,GAAG,EAAE;AAHP,GA9BiB,EAmCjB;AACEZ,IAAAA,SAAS,EAAE,QADb;AAEEa,IAAAA,QAAQ,EAAE,CACR;AACEZ,MAAAA,KAAK,EAAE,GADT;AAEEW,MAAAA,GAAG,EAAE,MAFP;AAGEF,MAAAA,OAAO,EAAE;AAHX,KADQ;AAFZ,GAnCiB,CAAnB;AA+CA,SAAO;AACLI,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,OAAO,EAAE,CAAC,IAAD,CAFJ;AAGL;AACA;AACAC,IAAAA,gBAAgB,EAAE,IALb;AAMLC,IAAAA,QAAQ,EAAErB,cANL;AAOLsB,IAAAA,QAAQ,EAAE,CACR;AACElB,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAEN;AAFT,KADQ,EAKRI,WALQ,EAMRoB,MANQ,CAMDjB,UANC;AAPL,GAAP;AAeD;;AAEDkB,MAAM,CAACC,OAAP,GAAiB7B,KAAjB","sourcesContent":["/*\n Language: G-code (ISO 6983)\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\n Website: https://www.sis.se/api/document/preview/911952/\n */\n\nfunction gcode(hljs) {\n  const GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  const GCODE_CLOSE_RE = '%';\n  const GCODE_KEYWORDS = {\n    $pattern: GCODE_IDENT_RE,\n    keyword: 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR'\n  };\n  const GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  const GCODE_CODE = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(/\\(/, /\\)/),\n    hljs.inherit(hljs.C_NUMBER_MODE, {\n      begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE\n    }),\n    hljs.inherit(hljs.APOS_STRING_MODE, {\n      illegal: null\n    }),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }),\n    {\n      className: 'name',\n      begin: '([G])([0-9]+\\\\.?[0-9]?)'\n    },\n    {\n      className: 'name',\n      begin: '([M])([0-9]+\\\\.?[0-9]?)'\n    },\n    {\n      className: 'attr',\n      begin: '(VC|VS|#)',\n      end: '(\\\\d+)'\n    },\n    {\n      className: 'attr',\n      begin: '(VZOFX|VZOFY|VZOFZ)'\n    },\n    {\n      className: 'built_in',\n      begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n      end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n    },\n    {\n      className: 'symbol',\n      variants: [\n        {\n          begin: 'N',\n          end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    }\n  ];\n\n  return {\n    name: 'G-code (ISO 6983)',\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    keywords: GCODE_KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: GCODE_CLOSE_RE\n      },\n      GCODE_START\n    ].concat(GCODE_CODE)\n  };\n}\n\nmodule.exports = gcode;\n"]},"metadata":{},"sourceType":"script"}